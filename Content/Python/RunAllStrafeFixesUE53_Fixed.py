import unreal

def run_all_strafe_fixes_ue53():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–µ–π—Ñ–∞ –¥–ª—è UE 5.3"""
    print("üöÄ –ó–ê–ü–£–°–ö –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –°–¢–†–ï–ô–§–ê –î–õ–Ø UE 5.3")
    print("=" * 60)
    
    try:
        # 1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        print("\nüîß –≠–¢–ê–ü 1: –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï")
        print("-" * 40)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
        fix_strafe_system_ue53()
        
        # 2. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        print("\n‚úÖ –≠–¢–ê–ü 2: –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê")
        print("-" * 40)
        
        final_check()
        
        # 3. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
        print("\nüéÆ –≠–¢–ê–ü 3: –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ")
        print("-" * 40)
        
        testing_instructions()
        
        print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!")
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä—É—á–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ FIX_JUMP_INSTEAD_OF_STRAFE.md")

def fix_strafe_system_ue53():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–µ–π—Ñ–∞ –¥–ª—è UE 5.3"""
    print("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ –°–¢–†–ï–ô–§–ê –î–õ–Ø UE 5.3 ===")
    
    try:
        # 1. –°–æ–∑–¥–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã
        print("\n1. –°–û–ó–î–ê–ù–ò–ï –†–ï–°–£–†–°–û–í:")
        create_input_actions_ue53()
        create_strafe_curve_ue53()
        
        # 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º IMC_Default
        print("\n2. –ù–ê–°–¢–†–û–ô–ö–ê IMC_DEFAULT:")
        setup_input_mapping_context_ue53()
        
        # 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º BP_Player
        print("\n3. –ù–ê–°–¢–†–û–ô–ö–ê BP_PLAYER:")
        setup_blueprint_player_ue53()
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å Jump
        print("\n4. –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–õ–ò–ö–¢–û–í:")
        check_and_fix_jump_conflicts()
        
        print("\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø: {e}")
        print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä—É—á–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ FIX_JUMP_INSTEAD_OF_STRAFE.md")

def create_input_actions_ue53():
    """–°–æ–∑–¥–∞–Ω–∏–µ Input Actions –¥–ª—è UE 5.3"""
    actions = [
        ("IA_A", unreal.InputActionValueType.DIGITAL),
        ("IA_D", unreal.InputActionValueType.DIGITAL),
        ("IA_Space", unreal.InputActionValueType.DIGITAL)
    ]
    
    for action_name, value_type in actions:
        action_path = f"/Game/BackToZaraysk/Core/Input/Actions/Strafe/{action_name}.{action_name}"
        existing = unreal.load_asset(action_path)
        
        if not existing:
            try:
                new_action = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
                    asset_name=action_name,
                    package_path="/Game/BackToZaraysk/Core/Input/Actions/Strafe",
                    asset_class=unreal.InputAction,
                    factory=unreal.InputActionFactory()
                )
                if new_action:
                    new_action.value_type = value_type
                    new_action.consume_input = False
                    new_action.trigger_when_paused = False
                    unreal.EditorAssetLibrary.save_asset(new_action.get_path_name())
                    print(f"‚úì –°–æ–∑–¥–∞–Ω {action_name} —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ UE 5.3")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å {action_name}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {action_name}: {e}")
        else:
            print(f"‚úì {action_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è UE 5.3
            try:
                existing.value_type = value_type
                existing.consume_input = False
                existing.trigger_when_paused = False
                unreal.EditorAssetLibrary.save_asset(existing.get_path_name())
                print(f"‚úì {action_name} –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è UE 5.3")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {action_name}: {e}")

def create_strafe_curve_ue53():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏–≤–æ–π —Å—Ç—Ä–µ–π—Ñ–∞ –¥–ª—è UE 5.3"""
    curve_path = "/Game/BackToZaraysk/Core/Data/Curves/CF_StrafeMovement.CF_StrafeMovement"
    existing = unreal.load_asset(curve_path)
    
    if not existing:
        try:
            new_curve = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
                asset_name="CF_StrafeMovement",
                package_path="/Game/BackToZaraysk/Core/Data/Curves",
                asset_class=unreal.CurveFloat,
                factory=unreal.CurveFloatFactory()
            )
            if new_curve:
                new_curve.add_key(0.0, 0.0)
                new_curve.add_key(0.5, 1.0)
                new_curve.add_key(1.0, 0.0)
                
                # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è UE 5.3
                try:
                    if hasattr(new_curve, 'pre_infinity'):
                        new_curve.pre_infinity = unreal.RichCurveExtrapolation.RCCE_CYCLE
                    if hasattr(new_curve, 'post_infinity'):
                        new_curve.post_infinity = unreal.RichCurveExtrapolation.RCCE_CYCLE
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫—Ä–∏–≤–æ–π
                
                unreal.EditorAssetLibrary.save_asset(new_curve.get_path_name())
                print("‚úì –°–æ–∑–¥–∞–Ω–∞ CF_StrafeMovement —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ UE 5.3")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫—Ä–∏–≤—É—é")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∏–≤–æ–π: {e}")
    else:
        print("‚úì CF_StrafeMovement —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def setup_input_mapping_context_ue53():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Input Mapping Context –¥–ª—è UE 5.3"""
    imc_default = unreal.load_asset("/Game/BackToZaraysk/Core/Input/IMC_Default.IMC_Default")
    if not imc_default:
        print("‚ùå IMC_Default –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º Input Actions
    ia_a = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_A.IA_A")
    ia_d = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_D.IA_D")
    ia_space = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_Space.IA_Space")
    
    if not (ia_a and ia_d and ia_space):
        print("‚ùå Input Actions –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏
    existing_mappings = []
    try:
        for mapping in imc_default.mappings:
            if mapping.action:
                action_name = str(mapping.action.get_name()) if hasattr(mapping.action, 'get_name') else str(mapping.action)
                if any("IA_A" in action_name or "IA_D" in action_name or "IA_Space" in action_name):
                    existing_mappings.append(action_name)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞–ø–ø–∏–Ω–≥–æ–≤: {e}")
        existing_mappings = []
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏
    mappings_to_create = [
        (ia_a, unreal.Key.A, "IA_A"),
        (ia_d, unreal.Key.D, "IA_D"),
        (ia_space, unreal.Key.Space_Bar, "IA_Space")
    ]
    
    for action, key, name in mappings_to_create:
        if name not in existing_mappings:
            try:
                new_mapping = unreal.EnhancedActionKeyMapping()
                new_mapping.action = action
                new_mapping.key = key
                new_mapping.modifiers = []
                
                # –î–ª—è UE 5.3 –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç triggers
                try:
                    if hasattr(new_mapping, 'triggers'):
                        new_mapping.triggers = [unreal.InputTriggerDown()]
                    else:
                        new_mapping.trigger = unreal.TriggerType.IMPULSE
                except:
                    new_mapping.trigger = unreal.TriggerType.IMPULSE
                
                imc_default.mappings.append(new_mapping)
                print(f"‚úì –î–æ–±–∞–≤–ª–µ–Ω –º–∞–ø–ø–∏–Ω–≥ {name} -> {key}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–∞ {name}: {e}")
        else:
            print(f"‚úì –ú–∞–ø–ø–∏–Ω–≥ {name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    try:
        unreal.EditorAssetLibrary.save_asset(imc_default.get_path_name())
        print("‚úì IMC_Default –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è UE 5.3")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è IMC_Default: {e}")

def setup_blueprint_player_ue53():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Blueprint Player –¥–ª—è UE 5.3"""
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º StrafeComponent
    strafe_component = None
    try:
        for component in bp_player.components:
            if component.get_name() == "StrafeComponent":
                strafe_component = component
                break
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
    
    if strafe_component:
        print("‚úì StrafeComponent –Ω–∞–π–¥–µ–Ω")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        settings = {
            "StrafeDistance": 200.0,
            "StrafeDuration": 0.3,
            "StrafeCooldown": 1.0,
            "SpaceDoublePressWindow": 0.5,
            "StrafeSpeed": 400.0,
            "SmoothnessFactor": 2.0
        }
        
        for setting_name, value in settings.items():
            try:
                strafe_component.set_editor_property(setting_name, value)
                print(f"  ‚úì {setting_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ {value}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {setting_name}: {e}")
        
        # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫—Ä–∏–≤—É—é
        curve = unreal.load_asset("/Game/BackToZaraysk/Core/Data/Curves/CF_StrafeMovement.CF_StrafeMovement")
        if curve:
            try:
                strafe_component.set_editor_property("StrafeCurve", curve)
                print("  ‚úì Strafe Curve –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫—Ä–∏–≤–æ–π: {e}")
        else:
            print("  ‚ùå Strafe Curve –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        print("‚úì –ü–∞—Ä–∞–º–µ—Ç—Ä—ã StrafeComponent –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    else:
        print("‚ùå StrafeComponent –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("  –†–ï–®–ï–ù–ò–ï: –î–æ–±–∞–≤—å—Ç–µ StrafeComponent –≤—Ä—É—á–Ω—É—é –≤ BP_Player")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    functions_to_check = ["Handle A Input", "Handle D Input", "Handle Space Input"]
    for func_name in functions_to_check:
        try:
            function_exists = False
            for function in bp_player.functions:
                if function.get_name() == func_name:
                    function_exists = True
                    break
            
            if function_exists:
                print(f"‚úì –§—É–Ω–∫—Ü–∏—è {func_name} –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print(f"‚ùå –§—É–Ω–∫—Ü–∏—è {func_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                print(f"  –†–ï–®–ï–ù–ò–ï: –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é {func_name} –≤—Ä—É—á–Ω—É—é")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ {func_name}: {e}")
    
    try:
        unreal.EditorAssetLibrary.save_asset(bp_player.get_path_name())
        print("‚úì BP_Player –ø—Ä–æ–≤–µ—Ä–µ–Ω")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è BP_Player: {e}")

def check_and_fix_jump_conflicts():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å Jump"""
    imc_default = unreal.load_asset("/Game/BackToZaraysk/Core/Input/IMC_Default.IMC_Default")
    if not imc_default:
        print("‚ùå IMC_Default –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ò—â–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å Space Bar
    space_mappings = []
    jump_mappings = []
    
    try:
        for mapping in imc_default.mappings:
            if mapping.key == unreal.Key.Space_Bar:
                if mapping.action:
                    action_name = mapping.action.get_name() if hasattr(mapping.action, 'get_name') else str(mapping.action)
                    if "Jump" in action_name:
                        jump_mappings.append(action_name)
                    elif "IA_Space" in action_name:
                        space_mappings.append(action_name)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: {e}")
    
    if jump_mappings:
        print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(jump_mappings)} –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤ Jump –Ω–∞ Space Bar")
        for action_name in jump_mappings:
            print(f"    - {action_name}")
        print("  –†–ï–®–ï–ù–ò–ï: –ò–∑–º–µ–Ω–∏—Ç–µ –∫–ª–∞–≤–∏—à—É –¥–ª—è Jump –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ –º–∞–ø–ø–∏–Ω–≥")
    else:
        print("‚úì –ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å Jump –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    if space_mappings:
        print(f"‚úì –ù–∞–π–¥–µ–Ω–æ {len(space_mappings)} –º–∞–ø–ø–∏–Ω–≥–æ–≤ IA_Space –Ω–∞ Space Bar")
    else:
        print("‚ùå IA_Space –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Space Bar!")
        print("  –†–ï–®–ï–ù–ò–ï: –î–æ–±–∞–≤—å—Ç–µ –º–∞–ø–ø–∏–Ω–≥ IA_Space -> Space Bar –≤ IMC_Default")

def final_check():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Input Actions
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Input Actions:")
    input_actions_ok = True
    actions_to_check = ["IA_A", "IA_D", "IA_Space"]
    
    for action_name in actions_to_check:
        action_path = f"/Game/BackToZaraysk/Core/Input/Actions/Strafe/{action_name}.{action_name}"
        action = unreal.load_asset(action_path)
        if action:
            print(f"  ‚úì {action_name} –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"  ‚ùå {action_name} –ù–ï –ù–ê–ô–î–ï–ù!")
            input_actions_ok = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º IMC_Default
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ IMC_Default:")
    imc_default = unreal.load_asset("/Game/BackToZaraysk/Core/Input/IMC_Default.IMC_Default")
    if imc_default:
        print("  ‚úì IMC_Default –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–ø–ø–∏–Ω–≥–∏
        try:
            strafe_mappings = 0
            for mapping in imc_default.mappings:
                if mapping.action:
                    action_name = str(mapping.action.get_name()) if hasattr(mapping.action, 'get_name') else str(mapping.action)
                    if any("IA_A" in action_name or "IA_D" in action_name or "IA_Space" in action_name):
                        strafe_mappings += 1
            
            if strafe_mappings >= 3:
                print(f"  ‚úì –ù–∞–π–¥–µ–Ω–æ {strafe_mappings} –º–∞–ø–ø–∏–Ω–≥–æ–≤ –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞")
            else:
                print(f"  ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ {strafe_mappings} –º–∞–ø–ø–∏–Ω–≥–æ–≤ –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞")
        except Exception as e:
            print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞–ø–ø–∏–Ω–≥–æ–≤: {e}")
    else:
        print("  ‚ùå IMC_Default –ù–ï –ù–ê–ô–î–ï–ù!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º BP_Player
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ BP_Player:")
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if bp_player:
        print("  ‚úì BP_Player –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º StrafeComponent
        try:
            strafe_component = None
            for component in bp_player.components:
                if component.get_name() == "StrafeComponent":
                    strafe_component = component
                    break
            
            if strafe_component:
                print("  ‚úì StrafeComponent –Ω–∞–π–¥–µ–Ω")
            else:
                print("  ‚ùå StrafeComponent –ù–ï –ù–ê–ô–î–ï–ù!")
        except Exception as e:
            print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ StrafeComponent: {e}")
    else:
        print("  ‚ùå BP_Player –ù–ï –ù–ê–ô–î–ï–ù!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏–≤—É—é
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏–≤–æ–π:")
    curve = unreal.load_asset("/Game/BackToZaraysk/Core/Data/Curves/CF_StrafeMovement.CF_StrafeMovement")
    if curve:
        print("  ‚úì CF_StrafeMovement –Ω–∞–π–¥–µ–Ω–∞")
    else:
        print("  ‚ùå CF_StrafeMovement –ù–ï –ù–ê–ô–î–ï–ù–ê!")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    print("\nüìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:")
    if input_actions_ok and imc_default and bp_player and curve:
        print("  ‚úÖ –í–°–ï –û–°–ù–û–í–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ù–ê–ô–î–ï–ù–´")
        print("  üéØ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ")
    else:
        print("  ‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´, –¢–†–ï–ë–£–ï–¢–°–Ø –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê")
        print("  üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ FIX_JUMP_INSTEAD_OF_STRAFE.md")

def testing_instructions():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é"""
    print("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é —Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–µ–π—Ñ–∞:")
    
    print("\nüîß –ü–ï–†–ï–î –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï–ú:")
    print("1. –°–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: .\\build_ue53.bat")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–≥—Ä—É")
    print("3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å (Tab –∏–ª–∏ `)")
    
    print("\nüéÆ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("1. –£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–ª–∞–≤–∏—à—É A")
    print("2. –ë—ã—Å—Ç—Ä–æ –Ω–∞–∂–º–∏—Ç–µ Space –¥–≤–∞–∂–¥—ã")
    print("3. –ü–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ç—Ä–µ–π—Ñ –≤–ª–µ–≤–æ")
    print("4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å –∫–ª–∞–≤–∏—à–µ–π D –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞ –≤–ø—Ä–∞–≤–æ")
    
    print("\nüì∫ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–°–û–õ–ò:")
    print("–í –∫–æ–Ω—Å–æ–ª–∏ –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è:")
    print("- Cyan: 'Strafe Animation: Starting from...'")
    print("- Green: 'Strafe: Starting Left/Right strafe!'")
    print("- Yellow: 'Strafe Progress: X.X/1.0'")
    print("- Green: 'Strafe: Completed!'")
    
    print("\n‚ùå –ï–°–õ–ò –ù–ï –†–ê–ë–û–¢–ê–ï–¢:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Input Events –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –≤ BP_Player")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ Handle A/D/Space Input –≤—ã–∑—ã–≤–∞—é—Ç Parent Function")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –Ω–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å Jump Input")
    print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ StrafeComponent –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    
    print("\nüìã –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–û–ú–û–©–¨:")
    print("- –î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: FIX_JUMP_INSTEAD_OF_STRAFE.md")
    print("- –ë—ã—Å—Ç—Ä–∞—è —à–ø–∞—Ä–≥–∞–ª–∫–∞: QUICK_FIX_JUMP_ISSUE.md")
    print("- –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: MANUAL_INPUT_ANIMATION_SETUP_UE53.md")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
    print("üéØ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –°–ò–°–¢–ï–ú–´ –°–¢–†–ï–ô–§–ê –î–õ–Ø UE 5.3")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")
    print("=" * 70)
    
    try:
        run_all_strafe_fixes_ue53()
        
        print("\nüéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!")
        print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —Å—Ç—Ä–µ–π—Ñ–∞.")
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä—É—á–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ FIX_JUMP_INSTEAD_OF_STRAFE.md")

if __name__ == "__main__":
    main()


