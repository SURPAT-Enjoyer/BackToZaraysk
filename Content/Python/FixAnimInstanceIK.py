import unreal
import time

def fix_animinstance_ik():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ò–ö –≤ AnimInstance"""
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –ò–ö –í ANIMINSTANCE")
    print("=" * 50)
    
    try:
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
        time.sleep(1)
        
        # –ù–∞—Ö–æ–¥–∏–º ABP_Player
        abp_paths = [
            "/Game/BackToZaraysk/Core/Characters/Player/ABP_Player",
            "/Game/BackToZaraysk/Core/Characters/Player/ABP_Player1"
        ]
        
        abp_found = False
        for abp_path in abp_paths:
            if unreal.EditorAssetLibrary.does_asset_exist(abp_path):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω ABP_Player: {abp_path}")
                
                anim_bp = unreal.load_asset(abp_path)
                if anim_bp:
                    print(f"üìÇ ABP_Player –∑–∞–≥—Ä—É–∂–µ–Ω")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º Animation Blueprint
                    check_and_fix_animation_blueprint(anim_bp)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    unreal.EditorAssetLibrary.save_asset(abp_path)
                    print(f"üíæ ‚úÖ ABP_Player –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                    abp_found = True
                    break
        
        if not abp_found:
            print("‚ùå ABP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—â–µ–º –≤—Å–µ Animation Blueprint...")
            fix_all_animation_blueprints()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

def fix_all_animation_blueprints():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ Animation Blueprint"""
    
    try:
        asset_registry = unreal.AssetRegistryHelpers.get_asset_registry()
        
        anim_bp_filter = unreal.ARFilter()
        anim_bp_filter.class_paths = [unreal.AnimBlueprint.static_class()]
        
        anim_bp_assets = asset_registry.get_assets(anim_bp_filter)
        
        if anim_bp_assets:
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ Animation Blueprint: {len(anim_bp_assets)}")
            
            for asset_data in anim_bp_assets:
                if "Player" in asset_data.asset_name:
                    print(f"\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {asset_data.asset_name}")
                    
                    anim_bp = unreal.load_asset(asset_data.asset_name)
                    if anim_bp:
                        check_and_fix_animation_blueprint(anim_bp)
                        unreal.EditorAssetLibrary.save_asset(asset_data.asset_name)
                        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {asset_data.asset_name}")
                        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö ABP: {e}")

def check_and_fix_animation_blueprint(anim_bp):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç Animation Blueprint"""
    
    print("\nüîß –ü–†–û–í–ï–†–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ANIMATION BLUEPRINT")
    print("-" * 40)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö
    check_ik_variables(anim_bp)
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ò–ö –Ω–æ–¥—ã
    check_ik_nodes(anim_bp)
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    check_ik_connections(anim_bp)
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Å AnimInstance
    check_anim_instance_class(anim_bp)
    
    print("\nüéØ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")

def check_ik_variables(anim_bp):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö"""
    
    print("\nüìù –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –ò–ö:")
    
    try:
        if hasattr(anim_bp, 'variables') and anim_bp.variables:
            existing_vars = [var.variable_name for var in anim_bp.variables]
            print(f"  –ù–∞–π–¥–µ–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {len(existing_vars)}")
            
            # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö
            critical_vars = [
                "LeftFootEffectorLocation",
                "RightFootEffectorLocation",
                "LeftFootIKAlpha",
                "RightFootIKAlpha"
            ]
            
            missing_vars = []
            for var in critical_vars:
                if var in existing_vars:
                    print(f"  ‚úÖ {var}")
                else:
                    print(f"  ‚ùå {var} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!")
                    missing_vars.append(var)
            
            if missing_vars:
                print(f"\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:")
                print(f"   –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö: {missing_vars}")
                print(f"   –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ—Ä–∞–±–æ—á–µ–π –ò–ö!")
                print(f"\nüí° –†–ï–®–ï–ù–ò–ï:")
                print(f"   1. –û—Ç–∫—Ä–æ–π—Ç–µ Animation Blueprint")
                print(f"   2. –í My Blueprint ‚Üí Variables –¥–æ–±–∞–≤—å—Ç–µ:")
                for var in missing_vars:
                    if "EffectorLocation" in var:
                        print(f"      - {var} (Vector, Default: 0,0,0)")
                    elif "IKAlpha" in var:
                        print(f"      - {var} (Float, Default: 1.0)")
                print(f"   3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –ø–∏–Ω–∞–º –ò–ö –Ω–æ–¥–æ–≤")
                
        else:
            print("  ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {e}")

def check_ik_nodes(anim_bp):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ò–ö –Ω–æ–¥—ã"""
    
    print("\nüîó –ü–†–û–í–ï–†–ö–ê –ò–ö –ù–û–î:")
    
    try:
        if hasattr(anim_bp, 'anim_graph') and anim_bp.anim_graph:
            if hasattr(anim_bp.anim_graph, 'nodes') and anim_bp.anim_graph.nodes:
                nodes = [node.node_name for node in anim_bp.anim_graph.nodes]
                print(f"  –ù–∞–π–¥–µ–Ω–æ –Ω–æ–¥: {len(nodes)}")
                
                # –ò—â–µ–º –ò–ö –Ω–æ–¥—ã
                ik_nodes = [node for node in nodes if "IK" in node or "TwoBone" in node]
                if ik_nodes:
                    print(f"  ‚úÖ –ò–ö –Ω–æ–¥—ã –Ω–∞–π–¥–µ–Ω—ã: {ik_nodes}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –ò–ö –Ω–æ–¥
                    for node_name in ik_nodes:
                        check_ik_node_details(anim_bp, node_name)
                else:
                    print(f"  ‚ùå –ò–ö –ù–û–î–´ –ù–ï –ù–ê–ô–î–ï–ù–´!")
                    print(f"     –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ - –ò–ö –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!")
                    print(f"\nüí° –†–ï–®–ï–ù–ò–ï:")
                    print(f"   1. –û—Ç–∫—Ä–æ–π—Ç–µ Animation Blueprint")
                    print(f"   2. –í AnimGraph –¥–æ–±–∞–≤—å—Ç–µ TwoBoneIK –Ω–æ–¥—ã:")
                    print(f"      - LeftFootIK")
                    print(f"      - RightFootIK")
                    print(f"   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ—Å—Ç–∏:")
                    print(f"      LeftFootIK: IKBone=foot_l, Joint Target=calf_l, Effector Target=thigh_l")
                    print(f"      RightFootIK: IKBone=foot_r, Joint Target=calf_r, Effector Target=thigh_r")
                    
            else:
                print("  ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–æ–¥–∞–º")
        else:
            print("  ‚ùå AnimGraph –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–¥: {e}")

def check_ik_node_details(anim_bp, node_name):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–µ—Ç–∞–ª–∏ –ò–ö –Ω–æ–¥–∞"""
    
    print(f"\n  üîç –ê–Ω–∞–ª–∏–∑ –ò–ö –Ω–æ–¥–∞: {node_name}")
    
    try:
        # –ò—â–µ–º –Ω–æ–¥ –ø–æ –∏–º–µ–Ω–∏
        for node in anim_bp.anim_graph.nodes:
            if node.node_name == node_name:
                print(f"    –ù–∞–π–¥–µ–Ω –Ω–æ–¥: {node_name}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                if hasattr(node, 'pins'):
                    connected_pins = [pin for pin in node.pins if pin.linked_to]
                    if connected_pins:
                        print(f"      ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–∏–Ω—ã: {[pin.pin_name for pin in connected_pins]}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                        pin_names = [pin.pin_name for pin in connected_pins]
                        if "EffectorLocation" not in pin_names:
                            print(f"      ‚ùå EffectorLocation –ù–ï –ü–û–î–ö–õ–Æ–ß–ï–ù!")
                            print(f"         –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é EffectorLocation –∫ —ç—Ç–æ–º—É –ø–∏–Ω—É")
                        if "Alpha" not in pin_names:
                            print(f"      ‚ùå Alpha –ù–ï –ü–û–î–ö–õ–Æ–ß–ï–ù!")
                            print(f"         –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é IKAlpha –∫ —ç—Ç–æ–º—É –ø–∏–Ω—É")
                    else:
                        print(f"      ‚ùå –ù–ï–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô!")
                        print(f"         –ù–æ–¥ {node_name} –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω - –∏—Å–ø—Ä–∞–≤—å—Ç–µ –≤—Ä—É—á–Ω—É—é!")
                
                break
        else:
            print(f"    ‚ùå –ù–æ–¥ {node_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥—Ä–∞—Ñ–µ")
            
    except Exception as e:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–æ–¥–∞ {node_name}: {e}")

def check_ik_connections(anim_bp):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ò–ö"""
    
    print("\nüîå –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô –ò–ö:")
    
    try:
        if hasattr(anim_bp, 'anim_graph') and anim_bp.anim_graph:
            if hasattr(anim_bp.anim_graph, 'nodes') and anim_bp.anim_graph.nodes:
                total_connections = 0
                
                for node in anim_bp.anim_graph.nodes:
                    if hasattr(node, 'pins'):
                        for pin in node.pins:
                            if pin.linked_to:
                                total_connections += 1
                
                print(f"  –í—Å–µ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {total_connections}")
                
                if total_connections == 0:
                    print(f"  ‚ùå –ù–ï–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô –í –ì–†–ê–§–ï!")
                    print(f"     –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ - –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                    print(f"\nüí° –†–ï–®–ï–ù–ò–ï:")
                    print(f"   1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤—Å–µ –Ω–æ–¥—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ")
                    print(f"   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –µ—Å—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–π –Ω–æ–¥ (Output Pose)")
                    print(f"   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ò–ö –Ω–æ–¥—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –≥—Ä–∞—Ñ—É")
                    
            else:
                print("  ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–æ–¥–∞–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π")
        else:
            print("  ‚ùå AnimGraph –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {e}")

def check_anim_instance_class(anim_bp):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–ª–∞—Å—Å AnimInstance"""
    
    print("\nüé≠ –ü–†–û–í–ï–†–ö–ê –ö–õ–ê–°–°–ê ANIMINSTANCE:")
    
    try:
        if hasattr(anim_bp, 'parent_class'):
            parent_class = anim_bp.parent_class
            if parent_class:
                class_name = parent_class.get_name()
                print(f"  –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å: {class_name}")
                
                if "BTZBaseCharacterAnimInstance" in class_name:
                    print(f"  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–∞—Å—Ç–æ–º–Ω—ã–π AnimInstance")
                else:
                    print(f"  ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π AnimInstance")
                    print(f"     –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å UBTZBaseCharacterAnimInstance")
                    print(f"\nüí° –†–ï–®–ï–ù–ò–ï:")
                    print(f"   1. –í Class Settings ‚Üí Parent Class")
                    print(f"   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ UBTZBaseCharacterAnimInstance")
                    
            else:
                print("  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å")
        else:
            print("  ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ parent_class")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∞—Å—Å–∞: {e}")

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fix_animinstance_ik()
