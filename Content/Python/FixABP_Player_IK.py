import unreal
import time

def fix_abp_player_ik():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ò–ö –≤ ABP_Player"""
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° –ò–ö –í ABP_PLAYER")
    print("=" * 50)
    
    try:
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        print("–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...")
        time.sleep(2)
        
        # –ù–∞—Ö–æ–¥–∏–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º ABP_Player
        print("–ü–æ–∏—Å–∫ ABP_Player...")
        fix_abp_player()
        
        print("\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ABP_PLAYER –ó–ê–í–ï–†–®–ï–ù–û!")
        print("–ò–ö —Å–∏—Å—Ç–µ–º–∞ –≤ Animation Blueprint –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

def fix_abp_player():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç ABP_Player"""
    
    try:
        # –ò—â–µ–º Animation Blueprint –≤ –ø—Ä–æ–µ–∫—Ç–µ
        asset_registry = unreal.AssetRegistryHelpers.get_asset_registry()
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ Animation Blueprint
        anim_bp_filter = unreal.ARFilter()
        anim_bp_filter.class_paths = [unreal.AnimBlueprint.static_class()]
        
        anim_bp_assets = asset_registry.get_assets(anim_bp_filter)
        
        if anim_bp_assets:
            print(f"  –ù–∞–π–¥–µ–Ω–æ Animation Blueprint: {len(anim_bp_assets)}")
            
            for asset_data in anim_bp_assets:
                try:
                    # –ò—â–µ–º ABP_Player
                    if "ABP_Player" in asset_data.asset_name:
                        print(f"    –ù–∞–π–¥–µ–Ω ABP_Player: {asset_data.asset_name}")
                        
                        anim_bp = unreal.load_asset(asset_data.asset_name)
                        if anim_bp:
                            print(f"    –ó–∞–≥—Ä—É–∂–µ–Ω ABP_Player: {asset_data.asset_name}")
                            
                            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Animation Blueprint
                            fix_animation_blueprint_ik(anim_bp)
                            
                            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                            unreal.EditorAssetLibrary.save_asset(asset_data.asset_name)
                            print(f"    ‚úÖ ABP_Player –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {asset_data.asset_name}")
                            
                except Exception as e:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞ –≤ {asset_data.asset_name}: {e}")
        else:
            print("  ‚ö†Ô∏è Animation Blueprint –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ Animation Blueprint: {e}")

def fix_animation_blueprint_ik(anim_bp):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ò–ö –≤ Animation Blueprint"""
    
    print("    –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ö –≤ Animation Blueprint...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ IK
    print("    –°–æ–∑–¥–∞–Ω–∏–µ/–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö IK...")
    create_ik_variables(anim_bp)
    
    # –°–æ–∑–¥–∞–µ–º IK –Ω–æ–¥—ã
    print("    –°–æ–∑–¥–∞–Ω–∏–µ/–ø—Ä–æ–≤–µ—Ä–∫–∞ IK –Ω–æ–¥...")
    create_ik_nodes(anim_bp)
    
    print("    ‚úÖ –ò–ö –≤ Animation Blueprint –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")

def create_ik_variables(anim_bp):
    """–°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ IK –≤ Animation Blueprint"""
    
    variables = [
        ("LeftFootEffectorLocation", unreal.Vector, unreal.Vector(0, 0, 0)),
        ("RightFootEffectorLocation", unreal.Vector, unreal.Vector(0, 0, 0)),
        ("LeftFootIKAlpha", unreal.Float, 1.0),
        ("RightFootIKAlpha", unreal.Float, 1.0)
    ]
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    existing_vars = []
    try:
        if hasattr(anim_bp, 'variables') and anim_bp.variables:
            existing_vars = [var.variable_name for var in anim_bp.variables]
    except:
        existing_vars = []
    
    for name, type_class, default in variables:
        if name not in existing_vars:
            try:
                # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
                new_var = unreal.EditorAnimBlueprintUtils.add_variable(
                    anim_bp, name, type_class
                )
                if new_var:
                    new_var.variable_name = name
                    new_var.default_value = default
                    print(f"      ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: {name}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {name}: {e}")
        else:
            print(f"      ‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {name}")

def create_ik_nodes(anim_bp):
    """–°–æ–∑–¥–∞–µ—Ç IK –Ω–æ–¥—ã –≤ Animation Blueprint"""
    
    if not hasattr(anim_bp, 'anim_graph') or not anim_bp.anim_graph:
        print("      ‚ö†Ô∏è AnimGraph –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    nodes = [
        ("TwoBoneIK", "LeftFootIK"),
        ("TwoBoneIK", "RightFootIK")
    ]
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–æ–¥—ã
    existing_nodes = []
    try:
        if hasattr(anim_bp.anim_graph, 'nodes') and anim_bp.anim_graph.nodes:
            existing_nodes = [node.node_name for node in anim_bp.anim_graph.nodes]
    except:
        existing_nodes = []
    
    for node_type, node_name in nodes:
        if node_name not in existing_nodes:
            try:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–¥
                new_node = unreal.EditorAnimBlueprintUtils.add_node(
                    anim_bp.anim_graph, node_type, node_name
                )
                if new_node:
                    print(f"      ‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–¥: {node_name}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–¥–∞ {node_name}: {e}")
        else:
            print(f"      ‚ÑπÔ∏è –ù–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {node_name}")

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fix_abp_player_ik()
