# -*- coding: utf-8 -*-

import unreal

def setup_tactical_vest_data_asset():
    """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å Data Asset –¥–ª—è —Ç–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∂–∏–ª–µ—Ç–∞"""
    
    print("=== –ù–ê–°–¢–†–û–ô–ö–ê DATA ASSET –î–õ–Ø –¢–ê–ö–¢–ò–ß–ï–°–ö–û–ì–û –ñ–ò–õ–ï–¢–ê ===")
    
    # –ò—â–µ–º Data Asset
    data_asset = find_tactical_vest_data_asset()
    
    if not data_asset:
        print("‚ùå Data Asset –¥–ª—è –∂–∏–ª–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω Data Asset: {data_asset.get_name()}")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞
    setup_properties(data_asset)
    
    return True

def find_tactical_vest_data_asset():
    """–ù–∞–π—Ç–∏ Data Asset –¥–ª—è –∂–∏–ª–µ—Ç–∞"""
    
    asset_registry = unreal.AssetRegistryHelpers.get_asset_registry()
    data_asset_assets = asset_registry.get_assets_by_class("DataAsset", True)
    
    for asset in data_asset_assets:
        asset_name = asset.get_asset().get_name()
        asset_class = asset.get_asset().get_class().get_name()
        
        # –ò—â–µ–º –Ω–∞—à Data Asset
        if ("tactical" in asset_name.lower() or "vest" in asset_name.lower() or "DA_" in asset_name) and "TacticalVest" in asset_class:
            return asset.get_asset()
    
    return None

def setup_properties(data_asset):
    """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ Data Asset"""
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ–π—Å—Ç–≤ Data Asset...")
    
    try:
        # DisplayName
        unreal.EditorAssetLibrary.set_editor_property(data_asset, "DisplayName", "–¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∂–∏–ª–µ—Ç")
        print("   ‚úÖ DisplayName —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –†–∞–∑–º–µ—Ä
        unreal.EditorAssetLibrary.set_editor_property(data_asset, "SizeInCellsX", 3)
        unreal.EditorAssetLibrary.set_editor_property(data_asset, "SizeInCellsY", 3)
        print("   ‚úÖ –†–∞–∑–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: 3x3")
        
        # –°–ª–æ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ (Vest = 1)
        unreal.EditorAssetLibrary.set_editor_property(data_asset, "EquipmentSlot", 1)
        print("   ‚úÖ EquipmentSlot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: Vest")
        
        # –°–æ–∫–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è
        unreal.EditorAssetLibrary.set_editor_property(data_asset, "AttachSocketName", "spine_03")
        print("   ‚úÖ AttachSocketName —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: spine_03")
        
        # –ù–µ–ª—å–∑—è –≤—Ä–∞—â–∞—Ç—å
        unreal.EditorAssetLibrary.set_editor_property(data_asset, "bRotatable", False)
        print("   ‚úÖ bRotatable —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: False")
        
        # EquippedMesh
        mesh_set = setup_equipped_mesh(data_asset)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º Data Asset
        data_asset_path = data_asset.get_path_name()
        unreal.EditorAssetLibrary.save_asset(data_asset_path)
        print(f"   ‚úÖ Data Asset —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {data_asset_path}")
        
        if mesh_set:
            print("üéâ Data Asset –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        else:
            print("‚ö†Ô∏è Data Asset –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–æ EquippedMesh –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: {e}")
        return False

def setup_equipped_mesh(data_asset):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å EquippedMesh"""
    
    print("   üîç –ü–æ–∏—Å–∫ –º–µ—à–∞ –¥–ª—è –∂–∏–ª–µ—Ç–∞...")
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ –º–µ—à—É
    possible_paths = [
        "/Game/insurgent_2/Characters/SK_ChestRigSmall",
        "/Game/insurgent_2/Characters/SK_ChestRigSmall.SK_ChestRigSmall",
        "/Game/insurgent_2/Characters/SK_ChestRigSmall.SK_ChestRigSmall_C",
    ]
    
    for mesh_path in possible_paths:
        mesh_asset = unreal.EditorAssetLibrary.load_asset(mesh_path)
        if mesh_asset and mesh_asset.get_class().get_name() == "SkeletalMesh":
            unreal.EditorAssetLibrary.set_editor_property(data_asset, "EquippedMesh", mesh_asset)
            print(f"   ‚úÖ EquippedMesh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {mesh_asset.get_name()}")
            return True
    
    print("   ‚ùå –ú–µ—à –¥–ª—è –∂–∏–ª–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return False

def main():
    setup_tactical_vest_data_asset()

if __name__ == "__main__":
    main()

