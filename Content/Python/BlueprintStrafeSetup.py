import unreal

def setup_blueprint_strafe():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Blueprint –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞"""
    
    print("=== –ù–ê–°–¢–†–û–ô–ö–ê BLUEPRINT –î–õ–Ø –°–¢–†–ï–ô–§–ê ===")
    
    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º BP_Player
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print("‚úì BP_Player –∑–∞–≥—Ä—É–∂–µ–Ω")
    
    # 2. –ü–æ–ª—É—á–∞–µ–º Event Graph
    event_graph = None
    for graph in bp_player.function_graphs:
        if graph.get_name() == "Event Graph":
            event_graph = graph
            break
    
    if not event_graph:
        event_graph = bp_player.add_function_graph("Event Graph")
        print("‚úì Event Graph —Å–æ–∑–¥–∞–Ω")
    else:
        print("‚úì Event Graph –Ω–∞–π–¥–µ–Ω")
    
    # 3. –°–æ–∑–¥–∞–µ–º Input Events
    print("3. –°–æ–∑–¥–∞–Ω–∏–µ Input Events...")
    
    # IA_Move Event
    try:
        move_event = event_graph.add_node(unreal.K2Node_Event(), unreal.Vector2D(0, 0))
        move_event.set_from_function(unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/IA_Move.IA_Move"))
        print("‚úì IA_Move Event —Å–æ–∑–¥–∞–Ω")
    except:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å IA_Move Event")
    
    # IA_Jump Event
    try:
        jump_event = event_graph.add_node(unreal.K2Node_Event(), unreal.Vector2D(0, 200))
        jump_event.set_from_function(unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/IA_Jump.IA_Jump"))
        print("‚úì IA_Jump Event —Å–æ–∑–¥–∞–Ω")
    except:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å IA_Jump Event")
    
    # 4. –°–æ–∑–¥–∞–µ–º Custom Functions
    print("4. –°–æ–∑–¥–∞–Ω–∏–µ Custom Functions...")
    
    # Handle A Input Function
    handle_a_func = bp_player.add_function_graph("Handle A Input")
    if handle_a_func:
        print("‚úì Handle A Input Function —Å–æ–∑–¥–∞–Ω–∞")
    
    # Handle D Input Function  
    handle_d_func = bp_player.add_function_graph("Handle D Input")
    if handle_d_func:
        print("‚úì Handle D Input Function —Å–æ–∑–¥–∞–Ω–∞")
    
    # Handle Space Input Function
    handle_space_func = bp_player.add_function_graph("Handle Space Input")
    if handle_space_func:
        print("‚úì Handle Space Input Function —Å–æ–∑–¥–∞–Ω–∞")
    
    # 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º Blueprint
    unreal.EditorAssetLibrary.save_asset(bp_player.get_path_name())
    print("‚úì BP_Player —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
    
    print("\n=== –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –í BLUEPRINT ===")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ BP_Player")
    print("2. –í Event Graph:")
    print("   - IA_Move ‚Üí Break Vector2D ‚Üí Get X")
    print("   - IA_Jump ‚Üí Handle Space Input")
    print("3. –í Handle A Input:")
    print("   - Input: bPressed (Boolean)")
    print("   - Call Parent Function: Handle A Input")
    print("4. –í Handle D Input:")
    print("   - Input: bPressed (Boolean)")
    print("   - Call Parent Function: Handle D Input")
    print("5. –í Handle Space Input:")
    print("   - Input: bPressed (Boolean)")
    print("   - Call Parent Function: Handle Space Input")

def create_strafe_curve():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏–≤–æ–π –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞"""
    
    print("\n=== –°–û–ó–î–ê–ù–ò–ï –ö–†–ò–í–û–ô –°–¢–†–ï–ô–§–ê ===")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∫—Ä–∏–≤—ã—Ö –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    unreal.EditorAssetLibrary.make_directory("/Game/BackToZaraysk/Core/Data/Curves")
    
    # –°–æ–∑–¥–∞–µ–º Curve Float
    strafe_curve = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="CF_StrafeMovement",
        package_path="/Game/BackToZaraysk/Core/Data/Curves",
        asset_class=unreal.CurveFloat,
        factory=unreal.CurveFloatFactory()
    )
    
    if strafe_curve:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫—Ä–∏–≤—É—é –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
        strafe_curve.add_key(0.0, 0.0)
        strafe_curve.add_key(0.5, 1.0)
        strafe_curve.add_key(1.0, 0.0)
        
        unreal.EditorAssetLibrary.save_asset(strafe_curve.get_path_name())
        print("‚úì CF_StrafeMovement —Å–æ–∑–¥–∞–Ω–∞")
        
        return strafe_curve
    
    return None

def setup_player_character_properties():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ–π—Å—Ç–≤ PlayerCharacter"""
    
    print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê –°–í–û–ô–°–¢–í PLAYER CHARACTER ===")
    
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏–≤—É—é
    strafe_curve = unreal.load_asset("/Game/BackToZaraysk/Core/Data/Curves/CF_StrafeMovement.CF_StrafeMovement")
    
    if strafe_curve:
        # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫—Ä–∏–≤—É—é –≤ Strafe Curve
        bp_player.set_editor_property("StrafeCurve", strafe_curve)
        print("‚úì Strafe Curve –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–µ–π—Ñ–∞
    bp_player.set_editor_property("StrafeDistance", 200.0)
    bp_player.set_editor_property("StrafeDuration", 0.3)
    bp_player.set_editor_property("StrafeCooldown", 1.0)
    bp_player.set_editor_property("SpaceDoublePressWindow", 0.5)
    
    print("‚úì –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–µ–π—Ñ–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    unreal.EditorAssetLibrary.save_asset(bp_player.get_path_name())
    print("‚úì BP_Player –æ–±–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    setup_blueprint_strafe()
    create_strafe_curve()
    setup_player_character_properties()
    
    print("\nüéÆ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("–¢–µ–ø–µ—Ä—å –≤ BP_Player:")
    print("1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Input Events –∫ —Ñ—É–Ω–∫—Ü–∏—è–º")
    print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: A/D + Space(2x)")

