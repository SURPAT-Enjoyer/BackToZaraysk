import unreal
import time

def auto_fix_abp_player_ik():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ö –≤ ABP_Player"""
    
    print("ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ABP_PLAYER –ò–ö")
    print("=" * 50)
    
    try:
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...")
        time.sleep(3)
        
        # –ù–∞—Ö–æ–¥–∏–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º ABP_Player
        print("üîç –ü–æ–∏—Å–∫ ABP_Player...")
        fix_abp_player_ik()
        
        print("\n‚úÖ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("üéØ –ò–ö —Å–∏—Å—Ç–µ–º–∞ –≤ Animation Blueprint –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

def fix_abp_player_ik():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ò–ö –≤ ABP_Player"""
    
    abp_found = False
    
    try:
        # –ò—â–µ–º Animation Blueprint –≤ –ø—Ä–æ–µ–∫—Ç–µ
        asset_registry = unreal.AssetRegistryHelpers.get_asset_registry()
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ Animation Blueprint
        anim_bp_filter = unreal.ARFilter()
        anim_bp_filter.class_paths = [unreal.AnimBlueprint.static_class()]
        
        anim_bp_assets = asset_registry.get_assets(anim_bp_filter)
        
        if anim_bp_assets:
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ Animation Blueprint: {len(anim_bp_assets)}")
            
            for asset_data in anim_bp_assets:
                try:
                    # –ò—â–µ–º ABP_Player (–º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö)
                    if "ABP_Player" in asset_data.asset_name or "Player" in asset_data.asset_name:
                        print(f"üéØ –ù–∞–π–¥–µ–Ω ABP_Player: {asset_data.asset_name}")
                        
                        anim_bp = unreal.load_asset(asset_data.asset_name)
                        if anim_bp:
                            print(f"üìÇ ABP_Player –∑–∞–≥—Ä—É–∂–µ–Ω: {asset_data.asset_name}")
                            
                            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Animation Blueprint
                            fix_animation_blueprint_ik_variables(anim_bp)
                            
                            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                            unreal.EditorAssetLibrary.save_asset(asset_data.asset_name)
                            print(f"üíæ ‚úÖ ABP_Player –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {asset_data.asset_name}")
                            abp_found = True
                            
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {asset_data.asset_name}: {e}")
        
        if not abp_found:
            print("‚ö†Ô∏è ABP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö Animation Blueprint...")
            create_ik_variables_for_all_abp(anim_bp_assets)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ Animation Blueprint: {e}")

def create_ik_variables_for_all_abp(anim_bp_assets):
    """–°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö –¥–ª—è –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö Animation Blueprint"""
    
    for asset_data in anim_bp_assets:
        try:
            print(f"üîß –û–±—Ä–∞–±–æ—Ç–∫–∞: {asset_data.asset_name}")
            
            anim_bp = unreal.load_asset(asset_data.asset_name)
            if anim_bp:
                fix_animation_blueprint_ik_variables(anim_bp)
                unreal.EditorAssetLibrary.save_asset(asset_data.asset_name)
                print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: {asset_data.asset_name}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {asset_data.asset_name}: {e}")

def fix_animation_blueprint_ik_variables(anim_bp):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö –≤ Animation Blueprint"""
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ò–ö...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ IK
    ik_variables = [
        ("LeftFootEffectorLocation", "Vector"),
        ("RightFootEffectorLocation", "Vector"),
        ("LeftFootIKAlpha", "Float"),
        ("RightFootIKAlpha", "Float")
    ]
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    existing_vars = []
    try:
        if hasattr(anim_bp, 'variables') and anim_bp.variables:
            existing_vars = [var.variable_name for var in anim_bp.variables]
            print(f"üìù –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {len(existing_vars)}")
    except:
        existing_vars = []
        print("‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º, –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å...")
    
    for var_name, var_type in ik_variables:
        if var_name not in existing_vars:
            try:
                # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
                if var_type == "Vector":
                    new_var = unreal.EditorAnimBlueprintUtils.add_variable(
                        anim_bp, var_name, unreal.Vector
                    )
                elif var_type == "Float":
                    new_var = unreal.EditorAnimBlueprintUtils.add_variable(
                        anim_bp, var_name, unreal.Float
                    )
                
                if new_var:
                    new_var.variable_name = var_name
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    if var_type == "Vector":
                        new_var.default_value = unreal.Vector(0, 0, 0)
                    elif var_type == "Float":
                        new_var.default_value = 1.0
                    
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: {var_name} ({var_type})")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å: {var_name}")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {var_name}: {e}")
        else:
            print(f"‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {var_name}")
    
    print("üéØ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")

# –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
auto_fix_abp_player_ik()
