import unreal

def fix_jump_instead_of_strafe():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä—ã–∂–∫–∞–º–∏ –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–µ–π—Ñ–∞"""
    print("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° –ü–†–´–ñ–ö–ê–ú–ò ===")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º Input Actions
    print("\n1. –ü–†–û–í–ï–†–ö–ê INPUT ACTIONS:")
    check_and_fix_input_actions()
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º IMC_Default
    print("\n2. –ü–†–û–í–ï–†–ö–ê IMC_DEFAULT:")
    check_and_fix_input_mapping_context()
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º BP_Player
    print("\n3. –ü–†–û–í–ï–†–ö–ê BP_PLAYER:")
    check_and_fix_blueprint_player()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å Jump
    print("\n4. –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–õ–ò–ö–¢–û–í –° JUMP:")
    check_jump_conflicts()
    
    print("\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!")

def check_and_fix_input_actions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Input Actions"""
    actions = [
        ("IA_A", unreal.InputActionValueType.DIGITAL),
        ("IA_D", unreal.InputActionValueType.DIGITAL),
        ("IA_Space", unreal.InputActionValueType.DIGITAL)
    ]
    
    for action_name, value_type in actions:
        action_path = f"/Game/BackToZaraysk/Core/Input/Actions/Strafe/{action_name}.{action_name}"
        action = unreal.load_asset(action_path)
        
        if action:
            print(f"‚úì {action_name} –Ω–∞–π–¥–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            if action.value_type != value_type:
                action.value_type = value_type
                print(f"  ‚úì –û–±–Ω–æ–≤–ª–µ–Ω Value Type –Ω–∞ Digital (bool)")
            
            if action.consume_input != False:
                action.consume_input = False
                print(f"  ‚úì Consume Input —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ false")
            
            if action.trigger_when_paused != False:
                action.trigger_when_paused = False
                print(f"  ‚úì Trigger When Paused —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ false")
            
            unreal.EditorAssetLibrary.save_asset(action.get_path_name())
        else:
            print(f"‚ùå {action_name} –ù–ï –ù–ê–ô–î–ï–ù!")
            print(f"  –°–æ–∑–¥–∞–π—Ç–µ {action_name} –≤—Ä—É—á–Ω—É—é —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:")
            print(f"    - Value Type: Digital (bool)")
            print(f"    - Consume Input: false")
            print(f"    - Trigger When Paused: false")

def check_and_fix_input_mapping_context():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Input Mapping Context"""
    imc_default = unreal.load_asset("/Game/BackToZaraysk/Core/Input/IMC_Default.IMC_Default")
    if not imc_default:
        print("‚ùå IMC_Default –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print("‚úì IMC_Default –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞–ø–ø–∏–Ω–≥–∏ –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞
    strafe_mappings = []
    jump_mappings = []
    
    for mapping in imc_default.mappings:
        if mapping.action:
            action_name = mapping.action.get_name()
            if "IA_A" in action_name or "IA_D" in action_name or "IA_Space" in action_name:
                strafe_mappings.append((action_name, mapping.key))
            elif "Jump" in action_name or mapping.key == unreal.Key.Space_Bar:
                jump_mappings.append((action_name, mapping.key))
    
    print(f"  –ù–∞–π–¥–µ–Ω–æ –º–∞–ø–ø–∏–Ω–≥–æ–≤ –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞: {len(strafe_mappings)}")
    for action, key in strafe_mappings:
        print(f"    ‚úì {action} -> {key}")
    
    print(f"  –ù–∞–π–¥–µ–Ω–æ –º–∞–ø–ø–∏–Ω–≥–æ–≤ –¥–ª—è –ø—Ä—ã–∂–∫–∞: {len(jump_mappings)}")
    for action, key in jump_mappings:
        print(f"    ‚ö†Ô∏è {action} -> {key}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
    if any(key == unreal.Key.Space_Bar for _, key in jump_mappings):
        print("  ‚ùå –ö–û–ù–§–õ–ò–ö–¢: Jump –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Space Bar!")
        print("  –†–ï–®–ï–ù–ò–ï: –ò–∑–º–µ–Ω–∏—Ç–µ –∫–ª–∞–≤–∏—à—É –¥–ª—è Jump –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ –º–∞–ø–ø–∏–Ω–≥")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏
    required_mappings = [
        ("IA_A", unreal.Key.A),
        ("IA_D", unreal.Key.D),
        ("IA_Space", unreal.Key.Space_Bar)
    ]
    
    missing_mappings = []
    for required_action, required_key in required_mappings:
        if not any(action == required_action for action, _ in strafe_mappings):
            missing_mappings.append((required_action, required_key))
    
    if missing_mappings:
        print(f"  ‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ï –ú–ê–ü–ü–ò–ù–ì–ò: {len(missing_mappings)}")
        for action, key in missing_mappings:
            print(f"    ‚ùå {action} -> {key}")
        print("  –†–ï–®–ï–ù–ò–ï: –î–æ–±–∞–≤—å—Ç–µ –º–∞–ø–ø–∏–Ω–≥–∏ –≤—Ä—É—á–Ω—É—é –≤ IMC_Default")

def check_and_fix_blueprint_player():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Blueprint Player"""
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print("‚úì BP_Player –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º StrafeComponent
    strafe_component = None
    for component in bp_player.components:
        if component.get_name() == "StrafeComponent":
            strafe_component = component
            break
    
    if strafe_component:
        print("  ‚úì StrafeComponent –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        settings = {
            "StrafeDistance": 200.0,
            "StrafeDuration": 0.3,
            "StrafeCooldown": 1.0,
            "SpaceDoublePressWindow": 0.5,
            "StrafeSpeed": 400.0,
            "SmoothnessFactor": 2.0
        }
        
        for setting_name, expected_value in settings.items():
            current_value = strafe_component.get_editor_property(setting_name)
            if current_value != expected_value:
                strafe_component.set_editor_property(setting_name, expected_value)
                print(f"    ‚úì {setting_name} –æ–±–Ω–æ–≤–ª–µ–Ω: {current_value} -> {expected_value}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏–≤—É—é
        curve = strafe_component.get_editor_property("StrafeCurve")
        if curve:
            print(f"    ‚úì Strafe Curve –Ω–∞–∑–Ω–∞—á–µ–Ω–∞: {curve.get_name()}")
        else:
            print("    ‚ùå Strafe Curve –ù–ï –ù–ê–ó–ù–ê–ß–ï–ù–ê!")
            print("    –†–ï–®–ï–ù–ò–ï: –ù–∞–∑–Ω–∞—á—å—Ç–µ CF_StrafeMovement –≤ StrafeComponent")
    else:
        print("  ‚ùå StrafeComponent –ù–ï –ù–ê–ô–î–ï–ù!")
        print("  –†–ï–®–ï–ù–ò–ï: –î–æ–±–∞–≤—å—Ç–µ StrafeComponent –≤ BP_Player")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    functions = ["Handle A Input", "Handle D Input", "Handle Space Input"]
    for func_name in functions:
        function_found = False
        for function in bp_player.functions:
            if function.get_name() == func_name:
                function_found = True
                break
        
        if function_found:
            print(f"  ‚úì –§—É–Ω–∫—Ü–∏—è {func_name} –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print(f"  ‚ùå –§—É–Ω–∫—Ü–∏—è {func_name} –ù–ï –ù–ê–ô–î–ï–ù–ê!")
            print(f"    –†–ï–®–ï–ù–ò–ï: –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é {func_name} –≤—Ä—É—á–Ω—É—é")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Input Events
    input_events_found = 0
    for graph in bp_player.function_graphs:
        if "Input" in graph.get_name():
            input_events_found += 1
    
    if input_events_found > 0:
        print(f"  ‚úì –ù–∞–π–¥–µ–Ω–æ {input_events_found} Input Graph")
    else:
        print("  ‚ùå Input Events –ù–ï –ù–ê–ô–î–ï–ù–´!")
        print("  –†–ï–®–ï–ù–ò–ï: –î–æ–±–∞–≤—å—Ç–µ Input Events –≤—Ä—É—á–Ω—É—é –≤ Event Graph")

def check_jump_conflicts():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å Jump"""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å Jump...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º IMC_Default –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
    imc_default = unreal.load_asset("/Game/BackToZaraysk/Core/Input/IMC_Default.IMC_Default")
    if imc_default:
        space_mappings = []
        for mapping in imc_default.mappings:
            if mapping.key == unreal.Key.Space_Bar:
                action_name = mapping.action.get_name() if mapping.action else "Unknown"
                space_mappings.append(action_name)
        
        if len(space_mappings) > 1:
            print(f"  ‚ö†Ô∏è –ö–û–ù–§–õ–ò–ö–¢: {len(space_mappings)} –¥–µ–π—Å—Ç–≤–∏–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç Space Bar:")
            for action in space_mappings:
                print(f"    - {action}")
            print("  –†–ï–®–ï–ù–ò–ï: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–ª—å–∫–æ IA_Space –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Space Bar")
        elif len(space_mappings) == 1:
            print(f"  ‚úì –¢–æ–ª—å–∫–æ {space_mappings[0]} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Space Bar")
        else:
            print("  ‚ùå –ù–ï–¢ –ú–ê–ü–ü–ò–ù–ì–û–í –ù–ê SPACE BAR!")
    
    print("  –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("    1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–ª—å–∫–æ IA_Space –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Space Bar")
    print("    2. –ï—Å–ª–∏ –µ—Å—Ç—å Jump Input, –∏–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –∫–ª–∞–≤–∏—à—É")
    print("    3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Input Events –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    try:
        fix_jump_instead_of_strafe()
        
        print("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ BP_Player")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Event Graph –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Input Events:")
        print("   - IA_A Started/Completed ‚Üí Handle A Input")
        print("   - IA_D Started/Completed ‚Üí Handle D Input")
        print("   - IA_Space Started ‚Üí Handle Space Input")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ Handle A/D/Space Input –≤—ã–∑—ã–≤–∞—é—Ç Parent Function")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ StrafeComponent")
        print("5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å Jump Input")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")

if __name__ == "__main__":
    main()


