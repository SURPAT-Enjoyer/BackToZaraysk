import unreal

def create_input_actions():
    """–°–æ–∑–¥–∞–Ω–∏–µ Input Actions –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞"""
    print("=== –°–û–ó–î–ê–ù–ò–ï INPUT ACTIONS ===")
    
    # –°–æ–∑–¥–∞–µ–º IA_A
    ia_a = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="IA_A",
        package_path="/Game/BackToZaraysk/Core/Input/Actions/Strafe",
        asset_class=unreal.InputAction,
        factory=unreal.InputActionFactory()
    )
    if ia_a:
        ia_a.value_type = unreal.InputActionValueType.BOOLEAN
        unreal.EditorAssetLibrary.save_asset(ia_a.get_path_name())
        print("‚úì –°–æ–∑–¥–∞–Ω IA_A")
    
    # –°–æ–∑–¥–∞–µ–º IA_D
    ia_d = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="IA_D",
        package_path="/Game/BackToZaraysk/Core/Input/Actions/Strafe",
        asset_class=unreal.InputAction,
        factory=unreal.InputActionFactory()
    )
    if ia_d:
        ia_d.value_type = unreal.InputActionValueType.BOOLEAN
        unreal.EditorAssetLibrary.save_asset(ia_d.get_path_name())
        print("‚úì –°–æ–∑–¥–∞–Ω IA_D")
    
    # –°–æ–∑–¥–∞–µ–º IA_Space
    ia_space = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="IA_Space",
        package_path="/Game/BackToZaraysk/Core/Input/Actions/Strafe",
        asset_class=unreal.InputAction,
        factory=unreal.InputActionFactory()
    )
    if ia_space:
        ia_space.value_type = unreal.InputActionValueType.BOOLEAN
        unreal.EditorAssetLibrary.save_asset(ia_space.get_path_name())
        print("‚úì –°–æ–∑–¥–∞–Ω IA_Space")

def setup_input_mapping():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Input Mapping Context"""
    print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê INPUT MAPPING CONTEXT ===")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º IMC_Default
    imc_default = unreal.load_asset("/Game/BackToZaraysk/Core/Input/IMC_Default.IMC_Default")
    if not imc_default:
        print("‚ùå IMC_Default –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º Input Actions
    ia_a = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_A.IA_A")
    ia_d = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_D.IA_D")
    ia_space = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_Space.IA_Space")
    
    if not (ia_a and ia_d and ia_space):
        print("‚ùå Input Actions –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥–∏
    mappings = []
    
    # A Key mapping
    a_mapping = unreal.EnhancedActionKeyMapping()
    a_mapping.action = ia_a
    a_mapping.key = unreal.Key.A
    a_mapping.modifiers = []
    a_mapping.trigger = unreal.TriggerType.IMPULSE
    mappings.append(a_mapping)
    
    # D Key mapping
    d_mapping = unreal.EnhancedActionKeyMapping()
    d_mapping.action = ia_d
    d_mapping.key = unreal.Key.D
    d_mapping.modifiers = []
    d_mapping.trigger = unreal.TriggerType.IMPULSE
    mappings.append(d_mapping)
    
    # Space Key mapping
    space_mapping = unreal.EnhancedActionKeyMapping()
    space_mapping.action = ia_space
    space_mapping.key = unreal.Key.Space_Bar
    space_mapping.modifiers = []
    space_mapping.trigger = unreal.TriggerType.IMPULSE
    mappings.append(space_mapping)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞–ø–ø–∏–Ω–≥–∏ –≤ IMC
    for mapping in mappings:
        imc_default.mappings.append(mapping)
    
    unreal.EditorAssetLibrary.save_asset(imc_default.get_path_name())
    print("‚úì IMC_Default –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤—ã–º–∏ –º–∞–ø–ø–∏–Ω–≥–∞–º–∏")

def create_strafe_curve():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏–≤–æ–π –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞"""
    print("\n=== –°–û–ó–î–ê–ù–ò–ï –ö–†–ò–í–û–ô –°–¢–†–ï–ô–§–ê ===")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∫—Ä–∏–≤—ã—Ö –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    unreal.EditorAssetLibrary.make_directory("/Game/BackToZaraysk/Core/Data/Curves")
    
    # –°–æ–∑–¥–∞–µ–º Curve Float
    strafe_curve = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="CF_StrafeMovement",
        package_path="/Game/BackToZaraysk/Core/Data/Curves",
        asset_class=unreal.CurveFloat,
        factory=unreal.CurveFloatFactory()
    )
    
    if strafe_curve:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫—Ä–∏–≤—É—é –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
        strafe_curve.add_key(0.0, 0.0)
        strafe_curve.add_key(0.5, 1.0)
        strafe_curve.add_key(1.0, 0.0)
        
        unreal.EditorAssetLibrary.save_asset(strafe_curve.get_path_name())
        print("‚úì CF_StrafeMovement —Å–æ–∑–¥–∞–Ω–∞")
        
        return strafe_curve
    
    return None

def setup_blueprint_events():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Blueprint Events"""
    print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê BLUEPRINT EVENTS ===")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º BP_Player
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏–≤—É—é —Å—Ç—Ä–µ–π—Ñ–∞
    strafe_curve = unreal.load_asset("/Game/BackToZaraysk/Core/Data/Curves/CF_StrafeMovement.CF_StrafeMovement")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ StrafeComponent
    if strafe_curve:
        # –ù–∞—Ö–æ–¥–∏–º StrafeComponent –≤ BP_Player
        for component in bp_player.components:
            if component.get_name() == "StrafeComponent":
                # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫—Ä–∏–≤—É—é
                component.set_editor_property("StrafeCurve", strafe_curve)
                print("‚úì Strafe Curve –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –≤ StrafeComponent")
                break
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–µ–π—Ñ–∞
    bp_player.set_editor_property("StrafeDistance", 200.0)
    bp_player.set_editor_property("StrafeDuration", 0.3)
    bp_player.set_editor_property("StrafeCooldown", 1.0)
    
    print("‚úì –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–µ–π—Ñ–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º BP_Player
    unreal.EditorAssetLibrary.save_asset(bp_player.get_path_name())
    print("‚úì BP_Player –æ–±–Ω–æ–≤–ª–µ–Ω")

def import_strafing_animation():
    """–ò–º–ø–æ—Ä—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ strafing"""
    print("\n=== –ò–ú–ü–û–†–¢ –ê–ù–ò–ú–ê–¶–ò–ò STRAFING ===")
    
    # –ü—É—Ç—å –∫ FBX —Ñ–∞–π–ª—É
    fbx_path = "Content/BackToZaraysk/Characters/Mannequins/Animations/Strafing/strafing.fbx"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not unreal.EditorAssetLibrary.does_asset_exist("/Game/BackToZaraysk/Characters/Mannequins/Animations/Strafing/strafing"):
        print("‚ùå FBX —Ñ–∞–π–ª strafing.fbx –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤:")
        print("Content/BackToZaraysk/Characters/Mannequins/Animations/Strafing/strafing.fbx")
        return
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∞
    import_options = unreal.FbxImportUI()
    import_options.import_mesh = False
    import_options.import_animations = True
    import_options.import_materials = False
    import_options.import_textures = False
    import_options.automated_import_should_detect_type = False
    import_options.original_import_type = unreal.FBXImportType.FBXIT_ANIMATION
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    import_options.anim_import_option = unreal.FbxAnimImportOption()
    import_options.anim_import_option.import_translation = unreal.Vector(0, 0, 0)
    import_options.anim_import_option.import_rotation = unreal.Rotator(0, 0, 0)
    import_options.anim_import_option.import_uniform_scale = 1.0
    
    # –ù–∞–π—Ç–∏ —Å–∫–µ–ª–µ—Ç Mannequin
    skeleton = unreal.load_asset("/Game/BackToZaraysk/Characters/Mannequins/Meshes/SK_Mannequin.SK_Mannequin")
    if skeleton:
        import_options.skeleton = skeleton
        print("‚úì –ù–∞–π–¥–µ–Ω —Å–∫–µ–ª–µ—Ç SK_Mannequin")
    else:
        print("‚ùå –°–∫–µ–ª–µ—Ç SK_Mannequin –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ò–º–ø–æ—Ä—Ç
    try:
        unreal.AssetToolsHelpers.get_asset_tools().import_asset(
            fbx_path,
            "/Game/BackToZaraysk/Characters/Mannequins/Animations/Strafing",
            import_options
        )
        print("‚úì –ê–Ω–∏–º–∞—Ü–∏—è strafing –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")

def create_blueprint_functions():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –≤ Blueprint"""
    print("\n=== –°–û–ó–î–ê–ù–ò–ï BLUEPRINT –§–£–ù–ö–¶–ò–ô ===")
    
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞
    functions_to_create = [
        "Handle A Input",
        "Handle D Input", 
        "Handle Space Input"
    ]
    
    for func_name in functions_to_create:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è
        function_exists = False
        for function in bp_player.functions:
            if function.get_name() == func_name:
                function_exists = True
                break
        
        if not function_exists:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
            new_function = bp_player.add_function(func_name)
            if new_function:
                print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: {func_name}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: {func_name}")
        else:
            print(f"‚úì –§—É–Ω–∫—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {func_name}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º BP_Player
    unreal.EditorAssetLibrary.save_asset(bp_player.get_path_name())

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üéØ –ü–û–õ–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–´ –°–¢–†–ï–ô–§–ê")
    print("=" * 50)
    
    try:
        create_input_actions()
        setup_input_mapping()
        create_strafe_curve()
        setup_blueprint_events()
        create_blueprint_functions()
        import_strafing_animation()
        
        print("\n" + "=" * 50)
        print("‚úÖ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("\nüéÆ –¢–µ–ø–µ—Ä—å –≤ BP_Player:")
        print("1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Input Events –∫ —Ñ—É–Ω–∫—Ü–∏—è–º:")
        print("   - IA_A (Pressed/Released) ‚Üí Handle A Input")
        print("   - IA_D (Pressed/Released) ‚Üí Handle D Input")
        print("   - IA_Space (Pressed) ‚Üí Handle Space Input")
        print("\n2. –í —Ñ—É–Ω–∫—Ü–∏—è—Ö –¥–æ–±–∞–≤—å—Ç–µ:")
        print("   - Call Parent Function: Handle A/D/Space Input")
        print("\n3. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ: A/D + Space(2x)")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤—Ä—É—á–Ω—É—é –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")

if __name__ == "__main__":
    main()


