import unreal

def setup_strafe_input_system():
    """–ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤–≤–æ–¥–∞ –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞"""
    
    print("=== –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–´ –í–í–û–î–ê –î–õ–Ø –°–¢–†–ï–ô–§–ê ===")
    
    # 1. –°–æ–∑–¥–∞–µ–º Input Actions –¥–ª—è A, D, Space
    print("1. –°–æ–∑–¥–∞–Ω–∏–µ Input Actions...")
    
    # IA_A
    ia_a = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="IA_A",
        package_path="/Game/BackToZaraysk/Core/Input/Actions/Strafe",
        asset_class=unreal.InputAction,
        factory=unreal.InputActionFactory()
    )
    if ia_a:
        ia_a.value_type = unreal.InputActionValueType.BOOLEAN
        unreal.EditorAssetLibrary.save_asset(ia_a.get_path_name())
        print("‚úì –°–æ–∑–¥–∞–Ω IA_A")
    
    # IA_D
    ia_d = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="IA_D",
        package_path="/Game/BackToZaraysk/Core/Input/Actions/Strafe",
        asset_class=unreal.InputAction,
        factory=unreal.InputActionFactory()
    )
    if ia_d:
        ia_d.value_type = unreal.InputActionValueType.BOOLEAN
        unreal.EditorAssetLibrary.save_asset(ia_d.get_path_name())
        print("‚úì –°–æ–∑–¥–∞–Ω IA_D")
    
    # IA_Space
    ia_space = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="IA_Space",
        package_path="/Game/BackToZaraysk/Core/Input/Actions/Strafe",
        asset_class=unreal.InputAction,
        factory=unreal.InputActionFactory()
    )
    if ia_space:
        ia_space.value_type = unreal.InputActionValueType.BOOLEAN
        unreal.EditorAssetLibrary.save_asset(ia_space.get_path_name())
        print("‚úì –°–æ–∑–¥–∞–Ω IA_Space")
    
    # 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Input Mapping Context
    print("2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Input Mapping Context...")
    
    imc_default = unreal.load_asset("/Game/BackToZaraysk/Core/Input/IMC_Default.IMC_Default")
    if not imc_default:
        print("‚ùå IMC_Default –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ Input Actions
    ia_a = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_A.IA_A")
    ia_d = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_D.IA_D")
    ia_space = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_Space.IA_Space")
    
    if not (ia_a and ia_d and ia_space):
        print("‚ùå Input Actions –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥–∏
    mappings = []
    
    # A Key mapping
    a_mapping = unreal.EnhancedActionKeyMapping()
    a_mapping.action = ia_a
    a_mapping.key = unreal.Key.A
    a_mapping.modifiers = []
    a_mapping.trigger = unreal.TriggerType.IMPULSE
    mappings.append(a_mapping)
    
    # D Key mapping
    d_mapping = unreal.EnhancedActionKeyMapping()
    d_mapping.action = ia_d
    d_mapping.key = unreal.Key.D
    d_mapping.modifiers = []
    d_mapping.trigger = unreal.TriggerType.IMPULSE
    mappings.append(d_mapping)
    
    # Space Key mapping
    space_mapping = unreal.EnhancedActionKeyMapping()
    space_mapping.action = ia_space
    space_mapping.key = unreal.Key.Space_Bar
    space_mapping.modifiers = []
    space_mapping.trigger = unreal.TriggerType.IMPULSE
    mappings.append(space_mapping)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞–ø–ø–∏–Ω–≥–∏ –≤ IMC
    for mapping in mappings:
        imc_default.mappings.append(mapping)
    
    unreal.EditorAssetLibrary.save_asset(imc_default.get_path_name())
    print("‚úì IMC_Default –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤—ã–º–∏ –º–∞–ø–ø–∏–Ω–≥–∞–º–∏")
    
    # 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Character Blueprint
    print("3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Character Blueprint...")
    
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º Graph –¥–ª—è Input Events
    input_graph = None
    for graph in bp_player.function_graphs:
        if graph.get_name() == "Input Events":
            input_graph = graph
            break
    
    if not input_graph:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π Graph –¥–ª—è Input Events
        input_graph = bp_player.add_function_graph("Input Events")
    
    print("‚úì –ù–∞–π–¥–µ–Ω Graph Input Events")
    
    # 4. –°–æ–∑–¥–∞–µ–º Curve –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞
    print("4. –°–æ–∑–¥–∞–Ω–∏–µ Curve –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞...")
    
    strafe_curve = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="CF_StrafeMovement",
        package_path="/Game/BackToZaraysk/Core/Data/Curves",
        asset_class=unreal.CurveFloat,
        factory=unreal.CurveFloatFactory()
    )
    
    if strafe_curve:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫—Ä–∏–≤—É—é –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
        # Time 0: Value 0
        # Time 0.5: Value 1 (–ø–∏–∫)
        # Time 1: Value 0
        strafe_curve.add_key(0.0, 0.0)
        strafe_curve.add_key(0.5, 1.0)
        strafe_curve.add_key(1.0, 0.0)
        unreal.EditorAssetLibrary.save_asset(strafe_curve.get_path_name())
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ CF_StrafeMovement")
    
    print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===")
    print("–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –ø–æ–¥–∫–ª—é—á–∏—Ç—å Input Events –≤ BP_Player:")
    print("1. IA_A ‚Üí Handle A Input (Pressed/Released)")
    print("2. IA_D ‚Üí Handle D Input (Pressed/Released)")
    print("3. IA_Space ‚Üí Handle Space Input (Pressed)")
    print("4. –ù–∞–∑–Ω–∞—á–∏—Ç—å CF_StrafeMovement –≤ Strafe Curve")

def import_strafing_animation():
    """–ò–º–ø–æ—Ä—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ strafing"""
    
    print("\n=== –ò–ú–ü–û–†–¢ –ê–ù–ò–ú–ê–¶–ò–ò STRAFING ===")
    
    # –ü—É—Ç—å –∫ FBX —Ñ–∞–π–ª—É
    fbx_path = "Content/BackToZaraysk/Characters/Mannequins/Animations/Strafing/strafing.fbx"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∞
    import_options = unreal.FbxImportUI()
    import_options.import_mesh = False
    import_options.import_animations = True
    import_options.import_materials = False
    import_options.import_textures = False
    import_options.automated_import_should_detect_type = False
    import_options.original_import_type = unreal.FBXImportType.FBXIT_ANIMATION
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    import_options.anim_import_option = unreal.FbxAnimImportOption()
    import_options.anim_import_option.import_translation = unreal.Vector(0, 0, 0)
    import_options.anim_import_option.import_rotation = unreal.Rotator(0, 0, 0)
    import_options.anim_import_option.import_uniform_scale = 1.0
    
    # –ù–∞–π—Ç–∏ —Å–∫–µ–ª–µ—Ç Mannequin
    skeleton = unreal.load_asset("/Game/BackToZaraysk/Characters/Mannequins/Meshes/SK_Mannequin.SK_Mannequin")
    if skeleton:
        import_options.skeleton = skeleton
        print("‚úì –ù–∞–π–¥–µ–Ω —Å–∫–µ–ª–µ—Ç SK_Mannequin")
    else:
        print("‚ùå –°–∫–µ–ª–µ—Ç SK_Mannequin –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ò–º–ø–æ—Ä—Ç
    try:
        unreal.AssetToolsHelpers.get_asset_tools().import_asset(
            fbx_path,
            "/Game/BackToZaraysk/Characters/Mannequins/Animations/Strafing",
            import_options
        )
        print("‚úì –ê–Ω–∏–º–∞—Ü–∏—è strafing –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")

if __name__ == "__main__":
    setup_strafe_input_system()
    import_strafing_animation()
    print("\nüéÆ –°–∏—Å—Ç–µ–º–∞ —Å—Ç—Ä–µ–π—Ñ–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞! –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–≥—Ä—É –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ:")
    print("A + Space(2x) ‚Üí –°—Ç—Ä–µ–π—Ñ –≤–ª–µ–≤–æ")
    print("D + Space(2x) ‚Üí –°—Ç—Ä–µ–π—Ñ –≤–ø—Ä–∞–≤–æ")

