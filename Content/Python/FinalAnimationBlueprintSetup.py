import unreal
import time

# –§–ò–ù–ê–õ–¨–ù–ê–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ANIMATION BLUEPRINT –î–õ–Ø IK
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Animation Blueprint

def final_animation_blueprint_setup():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Animation Blueprint –¥–ª—è IK"""
    
    print("ü§ñ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ANIMATION BLUEPRINT –î–õ–Ø IK")
    print("=" * 80)
    
    try:
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        print("–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...")
        time.sleep(5)
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É Animation Blueprint
        print("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Animation Blueprint...")
        setup_animation_blueprint_final()
        
        print("\n‚úÖ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ANIMATION BLUEPRINT –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("Animation Blueprint –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å IK!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

def setup_animation_blueprint_final():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Animation Blueprint"""
    
    print("–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Animation Blueprint...")
    
    # –ò—â–µ–º Animation Blueprint –≤ –ø—Ä–æ–µ–∫—Ç–µ
    print("–ü–æ–∏—Å–∫ Animation Blueprint –≤ –ø—Ä–æ–µ–∫—Ç–µ...")
    find_and_setup_animation_blueprint_final()
    
    print("‚úÖ Animation Blueprint –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ñ–∏–Ω–∞–ª—å–Ω–æ!")

def find_and_setup_animation_blueprint_final():
    """–ù–∞—Ö–æ–¥–∏—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Animation Blueprint —Ñ–∏–Ω–∞–ª—å–Ω–æ"""
    
    try:
        # –ò—â–µ–º –≤—Å–µ Animation Blueprint –≤ –ø—Ä–æ–µ–∫—Ç–µ
        asset_registry = unreal.AssetRegistryHelpers.get_asset_registry()
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ Animation Blueprint
        anim_bp_filter = unreal.ARFilter()
        anim_bp_filter.class_names = ["AnimBlueprint"]
        anim_bp_filter.recursive_classes = True
        
        anim_bp_assets = asset_registry.get_assets(anim_bp_filter)
        
        if anim_bp_assets:
            print(f"  –ù–∞–π–¥–µ–Ω–æ Animation Blueprint: {len(anim_bp_assets)}")
            
            for asset_data in anim_bp_assets:
                try:
                    anim_bp = unreal.load_asset(asset_data.asset_name)
                    if anim_bp:
                        print(f"    –û–±—Ä–∞–±–æ—Ç–∫–∞: {asset_data.asset_name}")
                        setup_single_animation_blueprint_final(anim_bp)
                        unreal.EditorAssetLibrary.save_asset(asset_data.asset_name)
                        print(f"    ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω: {asset_data.asset_name}")
                except Exception as e:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞ –≤ {asset_data.asset_name}: {e}")
        else:
            print("  ‚ö†Ô∏è Animation Blueprint –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("  –°–æ–∑–¥–∞–π—Ç–µ Animation Blueprint –≤—Ä—É—á–Ω—É—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ Animation Blueprint: {e}")

def setup_single_animation_blueprint_final(anim_bp):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–¥–∏–Ω Animation Blueprint —Ñ–∏–Ω–∞–ª—å–Ω–æ"""
    
    print("    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Animation Blueprint...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ IK
    print("    –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö IK...")
    create_ik_variables_final(anim_bp)
    
    # –°–æ–∑–¥–∞–µ–º IK –Ω–æ–¥—ã
    print("    –°–æ–∑–¥–∞–Ω–∏–µ IK –Ω–æ–¥...")
    create_ik_nodes_final(anim_bp)
    
    print("    ‚úÖ Animation Blueprint –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ñ–∏–Ω–∞–ª—å–Ω–æ!")

def create_ik_variables_final(anim_bp):
    """–°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ IK –≤ Animation Blueprint —Ñ–∏–Ω–∞–ª—å–Ω–æ"""
    
    variables = [
        ("LeftFootEffectorLocation", unreal.Vector, unreal.Vector(0, 0, 0)),
        ("RightFootEffectorLocation", unreal.Vector, unreal.Vector(0, 0, 0)),
        ("LeftFootIKAlpha", unreal.Float, 1.0),
        ("RightFootIKAlpha", unreal.Float, 1.0)
    ]
    
    existing = [var.variable_name for var in anim_bp.variables]
    
    for name, type_class, default in variables:
        if name not in existing:
            try:
                new_var = unreal.EditorAnimBlueprintUtils.add_variable(
                    anim_bp, name, type_class
                )
                if new_var:
                    new_var.variable_name = name
                    new_var.default_value = default
                    print(f"      ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: {name}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {name}: {e}")

def create_ik_nodes_final(anim_bp):
    """–°–æ–∑–¥–∞–µ—Ç IK –Ω–æ–¥—ã –≤ Animation Blueprint —Ñ–∏–Ω–∞–ª—å–Ω–æ"""
    
    if not anim_bp.anim_graph:
        print("      ‚ö†Ô∏è AnimGraph –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    nodes = [
        ("TwoBoneIK", "LeftFootIK"),
        ("TwoBoneIK", "RightFootIK")
    ]
    
    existing = [node.node_name for node in anim_bp.anim_graph.nodes]
    
    for node_type, node_name in nodes:
        if node_name not in existing:
            try:
                new_node = unreal.EditorAnimBlueprintUtils.add_node(
                    anim_bp.anim_graph, node_type, node_name
                )
                if new_node:
                    print(f"      ‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–¥: {node_name}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–¥–∞ {node_name}: {e}")

# –§–ò–ù–ê–õ–¨–ù–ê–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê ANIMATION BLUEPRINT
final_animation_blueprint_setup()
