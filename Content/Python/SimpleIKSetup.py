import unreal
import time

# –ü–†–û–°–¢–û–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –í–´–ü–û–õ–ù–ï–ù–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò IK
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IK

def simple_ik_setup():
    """–ü—Ä–æ—Å—Ç–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IK"""
    
    print("ü§ñ –ü–†–û–°–¢–û–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –í–´–ü–û–õ–ù–ï–ù–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò IK")
    print("=" * 60)
    
    try:
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
        print("–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞...")
        time.sleep(5)
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É IK
        print("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IK —Å–∏—Å—Ç–µ–º—ã...")
        setup_ik_simple()
        
        print("\n‚úÖ –ü–†–û–°–¢–û–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –í–´–ü–û–õ–ù–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("IK —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

def setup_ik_simple():
    """–ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ IK —Å–∏—Å—Ç–µ–º—ã"""
    
    print("–ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ IK —Å–∏—Å—Ç–µ–º—ã...")
    
    # –°–æ–∑–¥–∞–µ–º Blueprint Interface
    print("–°–æ–∑–¥–∞–Ω–∏–µ Blueprint Interface...")
    create_ik_interface_simple()
    
    # –°–æ–∑–¥–∞–µ–º Blueprint Actor –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("–°–æ–∑–¥–∞–Ω–∏–µ Blueprint Actor...")
    create_ik_actor_simple()
    
    print("‚úÖ IK —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–æ—Å—Ç–æ!")

def create_ik_interface_simple():
    """–ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ Blueprint Interface –¥–ª—è IK"""
    
    try:
        interface_path = "/Game/Blueprints/IKInterface"
        
        if not unreal.EditorAssetLibrary.does_asset_exist(interface_path):
            unreal.EditorAssetLibrary.make_directory("/Game/Blueprints/")
            
            interface = unreal.EditorAssetLibrary.create_asset(
                "IKInterface", "/Game/Blueprints/",
                unreal.BlueprintInterface, unreal.BlueprintInterfaceFactory()
            )
            
            if interface:
                print("  ‚úÖ Blueprint Interface —Å–æ–∑–¥–∞–Ω")
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
                add_interface_functions_simple(interface)
                
                unreal.EditorAssetLibrary.save_asset(interface_path)
            else:
                print("  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Blueprint Interface")
        else:
            print("  ‚ÑπÔ∏è Blueprint Interface —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Blueprint Interface: {e}")

def add_interface_functions_simple(interface):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∫ Blueprint Interface"""
    
    functions = [
        ("SetLeftFootIK", [unreal.FunctionParameter(name="Offset", type=unreal.EdGraphPinType(pin_category="float"))]),
        ("SetRightFootIK", [unreal.FunctionParameter(name="Offset", type=unreal.EdGraphPinType(pin_category="float"))])
    ]
    
    for func_name, params in functions:
        try:
            unreal.BlueprintEditorLibrary.add_function_to_interface(interface, func_name, params)
            print(f"    ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: {func_name}")
        except Exception as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ {func_name}: {e}")

def create_ik_actor_simple():
    """–ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ Blueprint Actor –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IK"""
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è Blueprint
        unreal.EditorAssetLibrary.make_directory("/Game/Blueprints/IK/")
        
        # –°–æ–∑–¥–∞–µ–º Blueprint Actor
        actor_path = "/Game/Blueprints/IK/IKSetupActor"
        
        if not unreal.EditorAssetLibrary.does_asset_exist(actor_path):
            ik_actor = unreal.EditorAssetLibrary.create_asset(
                "IKSetupActor",
                "/Game/Blueprints/IK/",
                unreal.Blueprint,
                unreal.BlueprintFactory()
            )
            
            if ik_actor:
                print("  ‚úÖ IK Setup Actor —Å–æ–∑–¥–∞–Ω")
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
                add_actor_components_simple(ik_actor)
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
                add_actor_functions_simple(ik_actor)
                
                unreal.EditorAssetLibrary.save_asset(actor_path)
            else:
                print("  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å IK Setup Actor")
        else:
            print("  ‚ÑπÔ∏è IK Setup Actor —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è IK Setup Actor: {e}")

def add_actor_components_simple(actor):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫ Actor"""
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º Scene Component
        scene_comp = unreal.EditorBlueprintUtils.add_component_to_blueprint(
            actor, unreal.SceneComponent
        )
        
        if scene_comp:
            print("    ‚úÖ Scene Component –¥–æ–±–∞–≤–ª–µ–Ω")
            
    except Exception as e:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")

def add_actor_functions_simple(actor):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∫ Actor"""
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é BeginPlay
        begin_play_func = unreal.EditorBlueprintUtils.add_function_to_blueprint(
            actor, "BeginPlay"
        )
        
        if begin_play_func:
            print("    ‚úÖ BeginPlay —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IK
        ik_setup_func = unreal.EditorBlueprintUtils.add_function_to_blueprint(
            actor, "SetupIKSystem"
        )
        
        if ik_setup_func:
            print("    ‚úÖ SetupIKSystem —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            
    except Exception as e:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π: {e}")

# –ü–†–û–°–¢–û–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –í–´–ü–û–õ–ù–ï–ù–ò–ï
simple_ik_setup()