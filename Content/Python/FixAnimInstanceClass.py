import unreal
import time

def fix_animinstance_class():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å AnimInstance –¥–ª—è ABP_Player"""
    
    print("üé≠ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–õ–ê–°–°–ê ANIMINSTANCE")
    print("=" * 40)
    
    try:
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
        time.sleep(1)
        
        # –ù–∞—Ö–æ–¥–∏–º ABP_Player
        abp_paths = [
            "/Game/BackToZaraysk/Core/Characters/Player/ABP_Player",
            "/Game/BackToZaraysk/Core/Characters/Player/ABP_Player1"
        ]
        
        abp_found = False
        for abp_path in abp_paths:
            if unreal.EditorAssetLibrary.does_asset_exist(abp_path):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω ABP_Player: {abp_path}")
                
                anim_bp = unreal.load_asset(abp_path)
                if anim_bp:
                    print(f"üìÇ ABP_Player –∑–∞–≥—Ä—É–∂–µ–Ω")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
                    check_and_fix_class(anim_bp, abp_path)
                    abp_found = True
                    break
        
        if not abp_found:
            print("‚ùå ABP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –ø—É—Ç—è–º")
            find_all_player_abp()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def find_all_player_abp():
    """–ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ Player Animation Blueprint"""
    
    try:
        asset_registry = unreal.AssetRegistryHelpers.get_asset_registry()
        
        anim_bp_filter = unreal.ARFilter()
        anim_bp_filter.class_paths = [unreal.AnimBlueprint.static_class()]
        
        anim_bp_assets = asset_registry.get_assets(anim_bp_filter)
        
        if anim_bp_assets:
            player_abps = [asset for asset in anim_bp_assets if "Player" in asset.asset_name]
            
            if player_abps:
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ Player Animation Blueprint: {len(player_abps)}")
                for asset in player_abps:
                    print(f"  - {asset.asset_name}")
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π ABP
                    anim_bp = unreal.load_asset(asset.asset_name)
                    if anim_bp:
                        check_and_fix_class(anim_bp, asset.asset_name)
            else:
                print("‚ùå Player Animation Blueprint –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("‚ùå Animation Blueprint –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")

def check_and_fix_class(anim_bp, asset_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å AnimInstance"""
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞: {asset_path}")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–ª–∞—Å—Å
        current_class = None
        if hasattr(anim_bp, 'parent_class'):
            current_class = anim_bp.parent_class
            if current_class:
                current_class_name = current_class.get_name()
                print(f"  –¢–µ–∫—É—â–∏–π –∫–ª–∞—Å—Å: {current_class_name}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª–∞—Å—Å
                if "BTZBaseCharacterAnimInstance" in current_class_name:
                    print(f"  ‚úÖ –£–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å!")
                    return True
                else:
                    print(f"  ‚ùå –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å!")
                    print(f"     –ù—É–∂–Ω–æ: UBTZBaseCharacterAnimInstance")
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å
                    return try_set_correct_class(anim_bp, asset_path)
            else:
                print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫–ª–∞—Å—Å")
                return False
        else:
            print(f"  ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ parent_class")
            return False
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∞—Å—Å–∞: {e}")
        return False

def try_set_correct_class(anim_bp, asset_path):
    """–ü—ã—Ç–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å"""
    
    print(f"  üîß –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞...")
    
    try:
        # –ò—â–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª–∞—Å—Å
        target_class_names = [
            "/Script/BackToZaraysk.UBTZBaseCharacterAnimInstance",
            "/Script/BackToZaraysk.BTZBaseCharacterAnimInstance"
        ]
        
        for class_name in target_class_names:
            try:
                target_class = unreal.load_class(None, class_name)
                if target_class:
                    print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω –∫–ª–∞—Å—Å: {target_class.get_name()}")
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å
                    anim_bp.parent_class = target_class
                    print(f"    ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–ª–∞—Å—Å: {target_class.get_name()}")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    unreal.EditorAssetLibrary.save_asset(asset_path)
                    print(f"    üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                    
                    return True
                    
            except Exception as e:
                print(f"    ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–ª–∞—Å—Å {class_name}: {e}")
                continue
        
        # –ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ
        print(f"    ‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
        print_manual_instructions()
        return False
        
    except Exception as e:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª–∞—Å—Å–∞: {e}")
        print_manual_instructions()
        return False

def print_manual_instructions():
    """–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    print(f"\nüí° –†–£–ß–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:")
    print(f"   1. –û—Ç–∫—Ä–æ–π—Ç–µ Animation Blueprint –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ")
    print(f"   2. –ù–∞–∂–º–∏—Ç–µ F4 –∏–ª–∏ –∫–Ω–æ–ø–∫—É 'Class Settings'")
    print(f"   3. –í 'Parent Class' –≤—ã–±–µ—Ä–∏—Ç–µ 'UBTZBaseCharacterAnimInstance'")
    print(f"   4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª (Ctrl+S)")
    print(f"   5. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä")

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fix_animinstance_class()
