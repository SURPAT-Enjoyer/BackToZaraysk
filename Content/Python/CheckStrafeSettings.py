import unreal
import time

def check_strafe_settings():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–µ–π—Ñ–∞ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö –°–ò–°–¢–ï–ú–´ –°–¢–†–ï–ô–§–ê")
    print("=" * 50)
    
    try:
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
        time.sleep(1)
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º Input Mapping Context
        check_input_mapping()
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º PlayerController
        check_player_controller()
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º PlayerCharacter
        check_player_character()
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º StrafeComponent
        check_strafe_component()
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º Animation Blueprint
        check_animation_blueprint()
        
        print("\nüéØ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        import traceback
        traceback.print_exc()

def check_input_mapping():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Input Mapping Context"""
    
    print("\nüéÆ –ü–†–û–í–ï–†–ö–ê INPUT MAPPING:")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
        project_settings = unreal.ProjectSettings.get_project_settings()
        
        print("  ‚úÖ Project Settings –¥–æ—Å—Ç—É–ø–Ω—ã")
        print("  üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é: Edit ‚Üí Project Settings ‚Üí Input ‚Üí Bindings")
        print("  üìã –ù—É–∂–Ω—ã–µ –ø—Ä–∏–≤—è–∑–∫–∏:")
        print("     - StrafeLeft (A)")
        print("     - StrafeRight (D)")
        print("     - StrafeSpace (Space)")
        print("     - LeanLeft (Q)")
        print("     - LeanRight (E)")
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Input: {e}")

def check_player_controller():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PlayerController"""
    
    print("\nüéÆ –ü–†–û–í–ï–†–ö–ê PLAYER CONTROLLER:")
    
    try:
        # –ò—â–µ–º PlayerController –≤ –º–∏—Ä–µ
        world = unreal.EditorLevelLibrary.get_editor_world()
        if world:
            player_controllers = unreal.GameplayStatics.get_all_actors_of_class(world, unreal.PlayerController)
            
            if player_controllers:
                pc = player_controllers[0]
                class_name = pc.get_class().get_name()
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω PlayerController: {class_name}")
                
                if "BTZPlayerController" in class_name:
                    print(f"  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å!")
                else:
                    print(f"  ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å. –û–∂–∏–¥–∞–µ—Ç—Å—è: BTZPlayerController")
            else:
                print(f"  ‚ö†Ô∏è PlayerController –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∏—Ä–µ")
                print(f"  üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ GameMode –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        else:
            print(f"  ‚ùå –ú–∏—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ PlayerController: {e}")

def check_player_character():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PlayerCharacter"""
    
    print("\nüèÉ –ü–†–û–í–ï–†–ö–ê PLAYER CHARACTER:")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Blueprint PlayerCharacter
        player_bp_path = "/Game/BackToZaraysk/Core/Characters/Player/BP_Player"
        
        if unreal.EditorAssetLibrary.does_asset_exist(player_bp_path):
            print(f"  ‚úÖ BP_Player –Ω–∞–π–¥–µ–Ω: {player_bp_path}")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º Blueprint
            player_bp = unreal.load_asset(player_bp_path)
            if player_bp:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Å
                parent_class = player_bp.parent_class
                if parent_class:
                    class_name = parent_class.get_name()
                    print(f"  üìã Parent Class: {class_name}")
                    
                    if "PlayerCharacter" in class_name:
                        print(f"  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å!")
                    else:
                        print(f"  ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å. –û–∂–∏–¥–∞–µ—Ç—Å—è: PlayerCharacter")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
                check_character_components(player_bp)
            else:
                print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å BP_Player")
        else:
            print(f"  ‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω: {player_bp_path}")
            print(f"  üí° –°–æ–∑–¥–∞–π—Ç–µ Blueprint –Ω–∞ –æ—Å–Ω–æ–≤–µ APlayerCharacter")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ PlayerCharacter: {e}")

def check_character_components(blueprint):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    
    print("\n  üîß –ü–†–û–í–ï–†–ö–ê –ö–û–ú–ü–û–ù–ï–ù–¢–û–í:")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ Blueprint
        if hasattr(blueprint, 'simple_construction_script'):
            scs = blueprint.simple_construction_script
            if scs:
                root_nodes = scs.get_root_nodes()
                components = []
                
                for root_node in root_nodes:
                    if hasattr(root_node, 'component_class'):
                        comp_class = root_node.component_class
                        if comp_class:
                            components.append(comp_class.get_name())
                
                print(f"    üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:")
                for comp in components:
                    print(f"      - {comp}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
                required_components = [
                    "StrafeComponent",
                    "InventoryComponent", 
                    "ObstacleClimbingComponent"
                ]
                
                missing_components = []
                for required in required_components:
                    if not any(required in comp for comp in components):
                        missing_components.append(required)
                
                if missing_components:
                    print(f"    ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: {missing_components}")
                    print(f"    üí° –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ Blueprint –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã")
                else:
                    print(f"    ‚úÖ –í—Å–µ –Ω—É–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
            else:
                print(f"    ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã")
        else:
            print(f"    ‚ùå Blueprint –Ω–µ –∏–º–µ–µ—Ç SCS")
            
    except Exception as e:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")

def check_strafe_component():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ StrafeComponent"""
    
    print("\n‚ö° –ü–†–û–í–ï–†–ö–ê STRAFE COMPONENT:")
    
    try:
        # –ò—â–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –º–∏—Ä–µ
        world = unreal.EditorLevelLibrary.get_editor_world()
        if world:
            characters = unreal.GameplayStatics.get_all_actors_of_class(world, unreal.Character)
            
            if characters:
                character = characters[0]
                
                # –ò—â–µ–º StrafeComponent
                strafe_comp = character.get_component_by_class(unreal.ActorComponent)
                
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ Blueprint
                print(f"  üí° StrafeComponent –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
                print(f"     - Strafe Distance: 200.0 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
                print(f"     - Strafe Duration: 0.3 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
                print(f"     - Strafe Cooldown: 1.0 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
                print(f"     - Strafe Speed: 400.0 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
                print(f"  üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ BP_Player ‚Üí StrafeComponent ‚Üí Details")
                
            else:
                print(f"  ‚ö†Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∏—Ä–µ")
        else:
            print(f"  ‚ùå –ú–∏—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ StrafeComponent: {e}")

def check_animation_blueprint():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Animation Blueprint"""
    
    print("\nüé≠ –ü–†–û–í–ï–†–ö–ê ANIMATION BLUEPRINT:")
    
    try:
        abp_path = "/Game/BackToZaraysk/Core/Characters/Player/ABP_Player"
        
        if unreal.EditorAssetLibrary.does_asset_exist(abp_path):
            print(f"  ‚úÖ ABP_Player –Ω–∞–π–¥–µ–Ω: {abp_path}")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º Animation Blueprint
            abp = unreal.load_asset(abp_path)
            if abp:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Å
                if hasattr(abp, 'parent_class') and abp.parent_class:
                    class_name = abp.parent_class.get_name()
                    print(f"  üìã Parent Class: {class_name}")
                    
                    if "BTZBaseCharacterAnimInstance" in class_name:
                        print(f"  ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å!")
                    else:
                        print(f"  ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å. –û–∂–∏–¥–∞–µ—Ç—Å—è: BTZBaseCharacterAnimInstance")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                check_abp_variables(abp)
            else:
                print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ABP_Player")
        else:
            print(f"  ‚ùå ABP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω: {abp_path}")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Animation Blueprint: {e}")

def check_abp_variables(abp):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Animation Blueprint"""
    
    print("\n  üìù –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–•:")
    
    try:
        if hasattr(abp, 'variables') and abp.variables:
            existing_vars = [var.variable_name for var in abp.variables]
            print(f"    üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {len(existing_vars)}")
            
            # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö
            required_vars = [
                "LeftFootEffectorLocation",
                "RightFootEffectorLocation",
                "LeftFootIKAlpha",
                "RightFootIKAlpha"
            ]
            
            missing_vars = []
            for var in required_vars:
                if var in existing_vars:
                    print(f"      ‚úÖ {var}")
                else:
                    print(f"      ‚ùå {var} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!")
                    missing_vars.append(var)
            
            if missing_vars:
                print(f"    ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö!")
                print(f"    üí° –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ Animation Blueprint ‚Üí My Blueprint ‚Üí Variables")
            else:
                print(f"    ‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ò–ö –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
        else:
            print(f"    ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º")
            
    except Exception as e:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {e}")

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
check_strafe_settings()



