import unreal

def fix_strafe_system():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å—Ç—Ä–µ–π—Ñ–∞"""
    print("=== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–†–ï–ô–§–ê ===")
    
    # 1. –°–æ–∑–¥–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã
    print("\n1. –°–û–ó–î–ê–ù–ò–ï –†–ï–°–£–†–°–û–í:")
    
    # Input Actions
    create_input_actions()
    
    # Curve
    create_strafe_curve()
    
    # 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º IMC_Default
    print("\n2. –ù–ê–°–¢–†–û–ô–ö–ê IMC_DEFAULT:")
    setup_input_mapping_context()
    
    # 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º BP_Player
    print("\n3. –ù–ê–°–¢–†–û–ô–ö–ê BP_PLAYER:")
    setup_blueprint_player()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º ABP_Player
    print("\n4. –ü–†–û–í–ï–†–ö–ê ABP_PLAYER:")
    check_animation_blueprint()
    
    print("\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!")

def create_input_actions():
    """–°–æ–∑–¥–∞–Ω–∏–µ Input Actions"""
    actions = [
        ("IA_A", unreal.InputActionValueType.BOOLEAN),
        ("IA_D", unreal.InputActionValueType.BOOLEAN),
        ("IA_Space", unreal.InputActionValueType.BOOLEAN)
    ]
    
    for action_name, value_type in actions:
        action_path = f"/Game/BackToZaraysk/Core/Input/Actions/Strafe/{action_name}.{action_name}"
        existing = unreal.load_asset(action_path)
        
        if not existing:
            new_action = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
                asset_name=action_name,
                package_path="/Game/BackToZaraysk/Core/Input/Actions/Strafe",
                asset_class=unreal.InputAction,
                factory=unreal.InputActionFactory()
            )
            if new_action:
                new_action.value_type = value_type
                unreal.EditorAssetLibrary.save_asset(new_action.get_path_name())
                print(f"‚úì –°–æ–∑–¥–∞–Ω {action_name}")
        else:
            print(f"‚úì {action_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def create_strafe_curve():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏–≤–æ–π —Å—Ç—Ä–µ–π—Ñ–∞"""
    curve_path = "/Game/BackToZaraysk/Core/Data/Curves/CF_StrafeMovement.CF_StrafeMovement"
    existing = unreal.load_asset(curve_path)
    
    if not existing:
        new_curve = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
            asset_name="CF_StrafeMovement",
            package_path="/Game/BackToZaraysk/Core/Data/Curves",
            asset_class=unreal.CurveFloat,
            factory=unreal.CurveFloatFactory()
        )
        if new_curve:
            new_curve.add_key(0.0, 0.0)
            new_curve.add_key(0.5, 1.0)
            new_curve.add_key(1.0, 0.0)
            unreal.EditorAssetLibrary.save_asset(new_curve.get_path_name())
            print("‚úì –°–æ–∑–¥–∞–Ω–∞ CF_StrafeMovement")
    else:
        print("‚úì CF_StrafeMovement —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def setup_input_mapping_context():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Input Mapping Context"""
    imc_default = unreal.load_asset("/Game/BackToZaraysk/Core/Input/IMC_Default.IMC_Default")
    if not imc_default:
        print("‚ùå IMC_Default –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º Input Actions
    ia_a = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_A.IA_A")
    ia_d = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_D.IA_D")
    ia_space = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/Strafe/IA_Space.IA_Space")
    
    if not (ia_a and ia_d and ia_space):
        print("‚ùå Input Actions –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏
    existing_mappings = []
    for mapping in imc_default.mappings:
        if mapping.action and any("IA_A" in str(mapping.action) or "IA_D" in str(mapping.action) or "IA_Space" in str(mapping.action)):
            existing_mappings.append(str(mapping.action))
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏
    mappings_to_create = [
        (ia_a, unreal.Key.A, "IA_A"),
        (ia_d, unreal.Key.D, "IA_D"),
        (ia_space, unreal.Key.Space_Bar, "IA_Space")
    ]
    
    for action, key, name in mappings_to_create:
        if name not in existing_mappings:
            new_mapping = unreal.EnhancedActionKeyMapping()
            new_mapping.action = action
            new_mapping.key = key
            new_mapping.modifiers = []
            new_mapping.trigger = unreal.TriggerType.IMPULSE
            imc_default.mappings.append(new_mapping)
            print(f"‚úì –î–æ–±–∞–≤–ª–µ–Ω –º–∞–ø–ø–∏–Ω–≥ {name} -> {key}")
        else:
            print(f"‚úì –ú–∞–ø–ø–∏–Ω–≥ {name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    unreal.EditorAssetLibrary.save_asset(imc_default.get_path_name())
    print("‚úì IMC_Default –æ–±–Ω–æ–≤–ª–µ–Ω")

def setup_blueprint_player():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Blueprint Player"""
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º StrafeComponent
    strafe_component = None
    for component in bp_player.components:
        if component.get_name() == "StrafeComponent":
            strafe_component = component
            break
    
    if strafe_component:
        print("‚úì StrafeComponent –Ω–∞–π–¥–µ–Ω")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        strafe_component.set_editor_property("StrafeDistance", 200.0)
        strafe_component.set_editor_property("StrafeDuration", 0.3)
        strafe_component.set_editor_property("StrafeCooldown", 1.0)
        strafe_component.set_editor_property("SpaceDoublePressWindow", 0.5)
        strafe_component.set_editor_property("StrafeSpeed", 400.0)
        strafe_component.set_editor_property("SmoothnessFactor", 2.0)
        
        # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫—Ä–∏–≤—É—é
        curve = unreal.load_asset("/Game/BackToZaraysk/Core/Data/Curves/CF_StrafeMovement.CF_StrafeMovement")
        if curve:
            strafe_component.set_editor_property("StrafeCurve", curve)
            print("‚úì Strafe Curve –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")
        
        print("‚úì –ü–∞—Ä–∞–º–µ—Ç—Ä—ã StrafeComponent –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    else:
        print("‚ùå StrafeComponent –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    
    # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    functions_to_create = ["Handle A Input", "Handle D Input", "Handle Space Input"]
    for func_name in functions_to_create:
        function_exists = False
        for function in bp_player.functions:
            if function.get_name() == func_name:
                function_exists = True
                break
        
        if not function_exists:
            new_function = bp_player.add_function(func_name)
            if new_function:
                print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è {func_name}")
    
    unreal.EditorAssetLibrary.save_asset(bp_player.get_path_name())
    print("‚úì BP_Player –æ–±–Ω–æ–≤–ª–µ–Ω")

def check_animation_blueprint():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Animation Blueprint"""
    abp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/ABP_Player.ABP_Player")
    if not abp_player:
        print("‚ùå ABP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–µ–π—Ñ–∞
    required_variables = ["bIsStrafing", "StrafeDirection"]
    for var_name in required_variables:
        variable_exists = False
        for variable in abp_player.variables:
            if variable.get_name() == var_name:
                variable_exists = True
                break
        
        if variable_exists:
            print(f"‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è {var_name} –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print(f"‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è {var_name} –ù–ï –ù–ê–ô–î–ï–ù–ê!")
            print(f"  –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é {var_name} –≤ AnimBP –≤—Ä—É—á–Ω—É—é")
    
    print("‚úì ABP_Player –ø—Ä–æ–≤–µ—Ä–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        fix_strafe_system()
        
        print("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ BP_Player")
        print("2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Input Events –∫ —Ñ—É–Ω–∫—Ü–∏—è–º:")
        print("   - IA_A (Pressed/Released) ‚Üí Handle A Input")
        print("   - IA_D (Pressed/Released) ‚Üí Handle D Input")
        print("   - IA_Space (Pressed) ‚Üí Handle Space Input")
        print("3. –í —Ñ—É–Ω–∫—Ü–∏—è—Ö –¥–æ–±–∞–≤—å—Ç–µ:")
        print("   - Call Parent Function: Handle A/D/Space Input")
        print("4. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∞–Ω–∏–º–∞—Ü–∏—é strafing.fbx")
        print("5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ AnimBP –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")

if __name__ == "__main__":
    main()


