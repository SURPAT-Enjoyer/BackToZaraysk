import unreal

def quick_strafe_setup():
    """–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–µ–π—Ñ–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö Input Actions"""
    
    print("=== –ë–´–°–¢–†–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –°–¢–†–ï–ô–§–ê ===")
    
    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ Input Actions
    print("1. –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö Input Actions...")
    
    ia_move = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/IA_Move.IA_Move")
    ia_jump = unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/IA_Jump.IA_Jump")
    
    if not ia_move:
        print("‚ùå IA_Move –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    if not ia_jump:
        print("‚ùå IA_Jump –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print("‚úì IA_Move –∏ IA_Jump –Ω–∞–π–¥–µ–Ω—ã")
    
    # 2. –°–æ–∑–¥–∞–µ–º Curve –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞
    print("2. –°–æ–∑–¥–∞–Ω–∏–µ Curve –¥–ª—è —Å—Ç—Ä–µ–π—Ñ–∞...")
    
    strafe_curve = unreal.AssetToolsHelpers.get_asset_tools().create_asset(
        asset_name="CF_StrafeMovement",
        package_path="/Game/BackToZaraysk/Core/Data/Curves",
        asset_class=unreal.CurveFloat,
        factory=unreal.CurveFloatFactory()
    )
    
    if strafe_curve:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫—Ä–∏–≤—É—é –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
        strafe_curve.add_key(0.0, 0.0)
        strafe_curve.add_key(0.5, 1.0)
        strafe_curve.add_key(1.0, 0.0)
        unreal.EditorAssetLibrary.save_asset(strafe_curve.get_path_name())
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ CF_StrafeMovement")
    
    # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º BP_Player
    print("3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ BP_Player...")
    
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print("‚úì BP_Player –Ω–∞–π–¥–µ–Ω")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–µ–π—Ñ–∞
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–µ–π—Ñ–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–µ–π—Ñ–∞ –≤ Blueprint
    has_strafe_vars = False
    for variable in bp_player.variables:
        if variable.get_name() in ["StrafeDistance", "StrafeDuration", "StrafeCooldown"]:
            has_strafe_vars = True
            break
    
    if has_strafe_vars:
        print("‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–µ–π—Ñ–∞ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    else:
        print("‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–µ–π—Ñ–∞ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é")
    
    print("\n=== –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –†–£–ß–ù–û–ô –ù–ê–°–¢–†–û–ô–ö–ò ===")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ BP_Player")
    print("2. –í Input Events –¥–æ–±–∞–≤—å—Ç–µ:")
    print("   - IA_Move ‚Üí –†–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ X –∏ Y")
    print("   - IA_Jump ‚Üí Handle Space Input (Pressed)")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    print("   - Handle A Input (Boolean) ‚Üí Call Parent: Handle A Input")
    print("   - Handle D Input (Boolean) ‚Üí Call Parent: Handle D Input")
    print("   - Handle Space Input (Boolean) ‚Üí Call Parent: Handle Space Input")
    print("4. –ù–∞–∑–Ω–∞—á—å—Ç–µ CF_StrafeMovement –≤ Strafe Curve")
    print("\nüéÆ –ì–æ—Ç–æ–≤–æ! –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ: A/D + Space(2x)")

def create_input_blueprint_nodes():
    """–°–æ–∑–¥–∞–Ω–∏–µ Blueprint –Ω–æ–¥–æ–≤ –¥–ª—è –≤–≤–æ–¥–∞"""
    
    print("\n=== –°–û–ó–î–ê–ù–ò–ï BLUEPRINT –ù–û–î–û–í ===")
    
    bp_player = unreal.load_asset("/Game/BackToZaraysk/Core/Characters/Player/BP_Player.BP_Player")
    if not bp_player:
        print("‚ùå BP_Player –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º Event Graph
    event_graph = None
    for graph in bp_player.function_graphs:
        if graph.get_name() == "Event Graph":
            event_graph = graph
            break
    
    if not event_graph:
        event_graph = bp_player.add_function_graph("Event Graph")
    
    print("‚úì Event Graph –Ω–∞–π–¥–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–¥—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞
    try:
        # IA_Move –Ω–æ–¥
        move_event = event_graph.add_node(unreal.K2Node_Event(), 
                                        unreal.Vector2D(0, 0))
        move_event.set_from_function(unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/IA_Move.IA_Move"))
        
        print("‚úì –°–æ–∑–¥–∞–Ω –Ω–æ–¥ IA_Move")
        
        # IA_Jump –Ω–æ–¥  
        jump_event = event_graph.add_node(unreal.K2Node_Event(),
                                        unreal.Vector2D(0, 100))
        jump_event.set_from_function(unreal.load_asset("/Game/BackToZaraysk/Core/Input/Actions/IA_Jump.IA_Jump"))
        
        print("‚úì –°–æ–∑–¥–∞–Ω –Ω–æ–¥ IA_Jump")
        
        unreal.EditorAssetLibrary.save_asset(bp_player.get_path_name())
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: {e}")
        print("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ Input Events –≤—Ä—É—á–Ω—É—é –≤ BP_Player")

if __name__ == "__main__":
    quick_strafe_setup()
    create_input_blueprint_nodes()

